{"version":3,"sources":["Utils.js","components/Smart/constants.js","logo.svg","components/requestLog/HealthInfo.js","components/requestLog/ErrorDetail.js","components/requestLog/DetailEntry.js","components/requestLog/ResponseCheck.js","components/requestLog/RequestEntry.js","containers/RequestLog.js","components/publicKey/KeyEntry.js","components/publicKey/EditEntry.js","containers/KeyInterface.js","components/TableRow.js","components/DataTable.js","components/FhirTableRow.js","components/FhirTable.js","components/HomePage.js","components/Smart/Launcher.jsx","components/Smart/styles.jsx","components/Smart/Resources/Sections/StateSelect.jsx","components/Smart/Resources/Sections/JsonBox.jsx","components/Smart/Resources/PatientInfo.jsx","components/Smart/Resources/CoverageInfo.jsx","components/Smart/DisplayBox/DisplayBox.jsx","components/Smart/Expandable.jsx","components/Smart/Resources/PractitionerInfo.jsx","components/Smart/Resources/DeviceRequestInfo.jsx","components/Smart/Index.jsx","components/Smart/buildRequest.js","App.js","registerServiceWorker.js","index.js","components/Smart/url.js","components/ComponentConstants.js"],"names":["module","exports","getBaseUrl","baseUrl","document","querySelector","getAttribute","endsWith","startsWith","getBackend","backend","getHostOrg","grant_type","stateOptions","key","value","text","coverageCodes","codeSystems","hcpcsCodes","cptCodes","rxNormCodes","organizations","HealthInfo","props","state","requestInfo","dataProps","this","data","setState","patientAge","patientGender","patientAddressState","providerAddressState","code","codeSystemConversion","codeSystem","className","Object","keys","map","Component","ErrorDetail","events","status","timeline","hovertext","i","content","direction","tagName","useDefaultStyles","length","DetailEntry","slideIn","showRequestBody","showResults","showCards","bind","resultsCount","topics","prevState","jsonData","divStyle","marginLeft","element","style","unfurlJson","onClick","JSON","parse","atob","requestBody","cardList","RequestEntry","timestamp","Date","format","hookType","fhirVersion","success","timeStamp","viewDetails","openDetails","RequestLog","dataToShow","page","view","getPage","renderPageNumbers","getData","increaseView","a","fetch","method","headers","then","response","json","catch","error","console","log","requestData","sort","compareTime","pageNumber","startIndex","slice","returnArray","Math","ceil","push","b","showForward","showBackward","window","scrollTo","number","KeyEntry","animationClasses","kid","jwt","editMode","showContent","encodeURIComponent","updateContent","handleChange","deleteContent","jwtPub","e","pubKey","KEYUTIL","getKey","jwkPub","getJWKFromKey","stringify","event","target","preventDefault","keyID","KJUR","jws","JWS","getJWKthumbprint","updateIdCB","deleteCB","styles","delay","extraClass","onSubmit","onChange","href","download","EditEntry","generateKeyID","uniqueKey","submitContent","getKeyID","encodedKey","isUnique","alert","id","KeyInterface","intermed","jwtJson","filter","deleteData","exitNewItem","save","createNew","editing","newItem","returnItem","saveData","initData","doFetch","jwtData","keyObject","keyId","result","body","oldId","peopleArray","newId","newContent","changeBool","editData","newEntry","keyContent","TableRow","forEach","readableTopic","payer","link","DataTable","rules","backgroundColor","action","class","name","type","placeholder","Array","rule","home","FhirTableRow","resource","resourceType","filename","url","FhirTable","resources","hostOrg","links","description","HomePage","displayHostTest","scope","Launcher","serviceUri","clientId","clients","launch","fetchClients","handleInput","getUrlParameter","client","find","d","iss","client_id","localStorage","setItem","conformanceStatement","join","round","random","toString","redirectUri","location","protocol","host","pathname","replace","conformanceUri","conformanceGet","XMLHttpRequest","open","setRequestHeader","onload","responseText","innerText","authUri","tokenUri","rest","security","extension","arg","valueUri","sessionStorage","redirect_uri","authRedirect","redirect","send","options","currentClient","Dropdown","fluid","search","selection","renderClients","variant","makeStyles","theme","inputs","marginTop","height","resourceBar","border","borderRadius","padding","transition","overflow","openBar","genderBox","display","width","ageBox","menu","position","zIndex","top","left","minWidth","float","backdrop","loadButton","menuHeader","borderBottom","jsonInput","orgBox","index","StateSelect","classes","useStyles","callback","label","FormControl","InputLabel","labelId","option","MenuItem","JsonBox","useState","setOpen","locale","PatientInfo","patient","getAge","dateString","birthDate","today","age","getFullYear","m","getMonth","getDate","handleAge","n","newDate","ye","Intl","DateTimeFormat","year","mo","month","da","day","getApproxBirthdate","component","FormLabel","RadioGroup","aria-label","gender","FormControlLabel","control","Radio","TextField","InputLabelProps","shrink","address","jsObject","CoverageInfo","coverage","organization","classValue","orgName","getOrg","getClassValue","classList","covClass","getCode","DisplayBox","PropTypes","bool","object","func","isRequired","string","launchLink","launchSource","renderSource","modifySmartLaunchUrls","retrieveLaunchContext","exitSmart","smartLink","nextProps","suggestion","isDemoCard","uuid","axios","takeSuggestion","card","linkCopy","assign","fhirAccessToken","ehrLaunch","indexOf","patientId","fhirServerUrl","accessToken","fhirBaseUrl","Promise","resolve","reject","access_token","launchParameters","appContext","launchUrl","parameters","prototype","hasOwnProperty","call","launch_id","err","source","icon","src","alt","indicators","info","warning","summaryColors","renderedCards","cards","indicator","c","cardInd","suggestionsSection","linksSection","summarySection","fontSize","weight","color","summary","sourceSection","detailSection","detail","suggestions","item","ind","serviceUrl","Button","Opts","Variants","EMPHASIS","cardSectionHeaderStyle","marginBottom","builtCard","Expandable","title","Fragment","resourceClass","PractitionerInfo","practitioner","role","org","loc","getState","practitionerRole","DeviceRequestInfo","deviceRequest","codeCodeableConcept","coding","handleCode","system","codeableConcept","getSystem","renderCode","Index","token","params","patients","coverageOrg","practitionerLocation","practitionerOrg","handleFieldChange","makePatientResource","handleSubmit","fieldId","makeUrlParams","makeTokenRequest","deviceRequestResources","request","ehrUrl","prefetch","includePrefetch","hook","r4json","context","draftOrders","selections","buildRequest","fhirResponse","entry","patientResource","fullUrl","publicKey","App","homeUrl","publicUrl","requestUrl","dataUrl","fhirUrl","indexUrl","Route","exact","path","withRouter","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","ReactDOM","render","BrowserRouter","getElementById","URL","process","origin","addEventListener","get","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker","sParam","sURLVariables","substring","split","sParameterName","res","decodeURIComponent"],"mappings":"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","file":"static/js/main.4a72aafa.chunk.js","sourcesContent":["function getBaseUrl() {\n  let baseUrl = document.querySelector(\"meta[name='ctx']\").getAttribute(\"content\");\n  if(typeof baseUrl !== 'string') baseUrl = '/';\n  if(!baseUrl.endsWith('/')) baseUrl = baseUrl + '/'\n  if(!baseUrl.startsWith('/')) baseUrl = '/' + baseUrl\n  return baseUrl\n}\n\nfunction getBackend() {\n    let backend = document.querySelector(\"meta[name='backend']\").getAttribute(\"content\");\n    if(typeof backend !== 'string') backend = '/';\n    if(!backend.endsWith('/')) backend = backend + '/'\n    return backend;\n}\n\nfunction getHostOrg() {\n  let hostOrg = document.querySelector(\"meta[name='hostorg']\").getAttribute(\"content\");\n  return hostOrg\n}\n\nmodule.exports = {\n    getBaseUrl,\n    getBackend,\n    getHostOrg\n}","const grant_type = \"authorization_code\";\nconst stateOptions = [\n    { key: 'AL', value: 'AL', text: 'Alabama' },\n    { key: 'AK', value: 'AK', text: 'Alaska' },\n    { key: 'AZ', value: 'AZ', text: 'Arizona' },\n    { key: 'AR', value: 'AR', text: 'Arkansas' },\n    { key: 'CA', value: 'CA', text: 'California' },\n    { key: 'CO', value: 'CO', text: 'Colorado' },\n    { key: 'CT', value: 'CT', text: 'Connecticut' },\n    { key: 'DE', value: 'DE', text: 'Delaware' },\n    { key: 'DC', value: 'DC', text: 'District Of Columbia' },\n    { key: 'FL', value: 'FL', text: 'Florida' },\n    { key: 'GA', value: 'GA', text: 'Georgia' },\n    { key: 'HI', value: 'HI', text: 'Hawaii' },\n    { key: 'ID', value: 'ID', text: 'Idaho' },\n    { key: 'IL', value: 'IL', text: 'Illinois' },\n    { key: 'IN', value: 'IN', text: 'Indiana' },\n    { key: 'IA', value: 'IA', text: 'Iowa' },\n    { key: 'KS', value: 'KS', text: 'Kansas' },\n    { key: 'KY', value: 'KY', text: 'Kentucky' },\n    { key: 'LA', value: 'LA', text: 'Louisiana' },\n    { key: 'ME', value: 'ME', text: 'Maine' },\n    { key: 'MD', value: 'MD', text: 'Maryland' },\n    { key: 'MA', value: 'MA', text: 'Massachusetts' },\n    { key: 'MI', value: 'MI', text: 'Michigan' },\n    { key: 'MN', value: 'MN', text: 'Minnesota' },\n    { key: 'MS', value: 'MS', text: 'Mississippi' },\n    { key: 'MO', value: 'MO', text: 'Missouri' },\n    { key: 'MT', value: 'MT', text: 'Montana' },\n    { key: 'NE', value: 'NE', text: 'Nebraska' },\n    { key: 'NV', value: 'NV', text: 'Nevada' },\n    { key: 'NH', value: 'NH', text: 'New Hampshire' },\n    { key: 'NJ', value: 'NJ', text: 'New Jersey' },\n    { key: 'NM', value: 'NM', text: 'New Mexico' },\n    { key: 'NY', value: 'NY', text: 'New York' },\n    { key: 'NC', value: 'NC', text: 'North Carolina' },\n    { key: 'ND', value: 'ND', text: 'North Dakota' },\n    { key: 'OH', value: 'OH', text: 'Ohio' },\n    { key: 'OK', value: 'OK', text: 'Oklahoma' },\n    { key: 'OR', value: 'OR', text: 'Oregon' },\n    { key: 'PA', value: 'PA', text: 'Pennsylvania' },\n    { key: 'RI', value: 'RI', text: 'Rhode Island' },\n    { key: 'SC', value: 'SC', text: 'South Carolina' },\n    { key: 'SD', value: 'SD', text: 'South Dakota' },\n    { key: 'TN', value: 'TN', text: 'Tennessee' },\n    { key: 'TX', value: 'TX', text: 'Texas' },\n    { key: 'UT', value: 'UT', text: 'Utah' },\n    { key: 'VT', value: 'VT', text: 'Vermont' },\n    { key: 'VA', value: 'VA', text: 'Virginia' },\n    { key: 'WA', value: 'WA', text: 'Washington' },\n    { key: 'WV', value: 'WV', text: 'West Virginia' },\n    { key: 'WI', value: 'WI', text: 'Wisconsin' },\n    { key: 'WY', value: 'WY', text: 'Wyoming' },\n  ]\n\nconst coverageCodes = [\n    {key: 'group', value: 'group', text: 'Group'},\n    {key: 'subgroup', value: 'subgroup', text: 'SubGroup'},\n    {key: 'plan', value: 'plan', text: 'Plan'},\n    {key: 'subplan', value: 'subplan', text: 'SubPlan'},\n    {key: 'class', value: 'class', text: 'Class'},\n    {key: 'subclass', value: 'subclass', text: 'SubClass'},\n    {key: 'sequence', value: 'sequence', text: 'Sequence'},\n    {key: 'rxbin', value: 'rxbin', text: 'RX BIN'},\n    {key: 'rxpcn', value: 'rxpcn', text: 'RX PCN'},\n    {key: 'rxid', value: 'rxid', text: 'RX Id'},\n    {key: 'rxgroup', value: 'rxgroup', text: 'RX Group'},\n\n]\n\nconst codeSystems = [\n    {key: 'hcpcs', value: 'https://bluebutton.cms.gov/resources/codesystem/hcpcs', text: 'HCPCS'},\n    {key: 'cpt', value: 'http://www.ama-assn.org/go/cpt', text: 'CPT'},\n    {key: 'rxnorm', value: 'http://www.nlm.nih.gov/research/umls/rxnorm', text: 'RxNorm'},\n]\n\nconst hcpcsCodes = [\n    {key: 'A0426', value: 'A0426', text: 'A0426'},\n    {key: 'A5500', value: 'A5500', text: 'A5500'},\n    {key: 'E0110', value: 'E0110', text: 'E0110'},\n    {key: 'E0130', value: 'E0130', text: 'E0130'},\n    {key: 'E0250', value: 'E0250', text: 'E0250'},\n    {key: 'E0424', value: 'E0424', text: 'E0424'},\n    {key: 'E0431', value: 'E0431', text: 'E0431'},\n    {key: 'E0433', value: 'E0433', text: 'E0433'},\n    {key: 'E0434', value: 'E0434', text: 'E0434'},\n    {key: 'E0439', value: 'E0439', text: 'E0439'},\n    {key: 'E0441', value: 'E0441', text: 'E0441'},\n    {key: 'E0442', value: 'E0442', text: 'E0442'},\n    {key: 'E0443', value: 'E0443', text: 'E0443'},\n    {key: 'E0444', value: 'E0444', text: 'E0444'},\n    {key: 'E0465', value: 'E0465', text: 'E0465'},\n    {key: 'E0470', value: 'E0470', text: 'E0470'},\n    {key: 'E0601', value: 'E0601', text: 'E0601'},\n    {key: 'E1390', value: 'E1390', text: 'E1390'},\n    {key: 'E1391', value: 'E1391', text: 'E1391'},\n    {key: 'E1392', value: 'E1392', text: 'E1392'},\n    {key: 'K0738', value: 'K0738', text: 'K0738'},\n]\n\nconst cptCodes = [\n    {key: '82947', value: '82947', text: '82947'},\n    {key: '94649', value: '94649', text: '94649'},\n    {key: '94660', value: '94660', text: '94660'},\n    {key: '95259', value: '95259', text: '95259'},\n    {key: '97542', value: '97542', text: '97542'},\n]\n\nconst rxNormCodes = [\n    {key: '209431', value: '209431', text: '209431'},\n    {key: '860195', value: '860195', text: '860195'},\n]\n\nconst organizations = [\n    {key: 'medicare', value: 'Centers for Medicare and Medicaid Services', text: 'Centers for Medicare and Medicaid Services'},\n]\nmodule.exports = {grant_type, stateOptions, coverageCodes, codeSystems, hcpcsCodes, cptCodes, rxNormCodes, organizations};\n","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, {Component} from 'react';\nimport './detail.css';\nimport './request.css';\n\nimport {codeSystemConversion} from '../ComponentConstants'\n\nexport default class HealthInfo extends Component {\n    constructor(props){\n        super(props);\n        this.state={\n            requestInfo: {}\n        };\n         \n    }\n\n    componentDidMount(){\n        // temporarily hard code the data\n        var dataProps = this.props.data;\n        this.setState({requestInfo: {\"age\":dataProps.patientAge,\"gender\":dataProps.patientGender,\"Patient State\":dataProps.patientAddressState,\"Provider State\":dataProps.providerAddressState,\n            \"code\":dataProps.code,\"codeSystem\":codeSystemConversion[dataProps.codeSystem]}})\n    }\n\n     render() {\n         return (\n             <div>\n                <div className=\"healthInfoHeader\">\n                    Request Info\n                </div>\n                <div className=\"healthInfo\">\n                    {Object.keys(this.state.requestInfo).map(key=>{\n                        return(  \n                            <div key = {key} className=\"infoEntry\">\n                            <span className=\"infoTitle\">{key}</span>: {this.state.requestInfo[key]}\n                            </div>\n                        )\n                    })}\n                </div>\n             </div>\n\n         )\n\n    }\n} ","import React, {Component} from 'react'\nimport Tooltip from 'react-tooltip-lite'\n\nimport './detail.css'\nexport default class ErrorDetail extends Component {\n    constructor(props){\n        super(props);\n        this.state={\n            events:{\n                \"Authorized\":{\n                    status: this.props.timeline?this.props.timeline[0]:false,\n                    hovertext: \"CRD gained authorization to access all necessary services\" },\n                \"Parsed\":{\n                    status: this.props.timeline?this.props.timeline[1]:false,\n                    hovertext: \"Request data parsed\" },\n                \"Hydrated\":{\n                    status: this.props.timeline?this.props.timeline[2]:false,\n                    hovertext: \"Prefetched associated data and added to request data\" },\n                \"CQL Fetched\":{\n                    status: this.props.timeline?this.props.timeline[3]:false,\n                    hovertext: \"Retrieved relevant CQL\" },\n                \"CQL Executed\":{\n                    status: this.props.timeline?this.props.timeline[4]:false,\n                    hovertext: \"Executed CQL using prefetched and request data\" },\n            }\n        };\n    }\n\n    render() {\n        return (\n            <div>\n                <div className=\"errorDetailBox\">\n                {\n                    Object.keys(this.state.events).map((key,i)=>{\n                        return (\n                            <div key = {key}>\n                                <div className=\"singleRow withNode\">\n                                    <div className=\"timelineEvent\">\n                                        <span className=\"labelFormat\"> \n                                            <Tooltip content={this.state.events[key].hovertext} \n                                                    direction=\"right\" tagName=\"span\" useDefaultStyles=\"true\">\n                                                {key}\n                                            </Tooltip>\n                                        </span>\n                                    </div>\n                                    <a className={\"node circle \"+[this.state.events[key].status?\"success\":\"failure\"]}>\n                                        {/* ignoring top nub at top node moves the relative positioning of the lower nub */}\n                                        {i!==0?<span className=\"topDivet\"></span>:<span className=\"topDivet invis\"></span>}\n                                        {i!==Object.keys(this.state.events).length-1?<span className=\"bottomDivet\">\n                                        </span>:null}\n                                    </a>\n                                </div>\n                                {/* stops the last node from getting a lower nub */}\n                                {\n                                    i!==Object.keys(this.state.events).length-1 \n                                    ?\n                                        <div className=\"singleRow\">\n                                            <div className=\"timelineEvent emptyEdge\"></div>\n                                            <div className=\"node edge\" > | </div>\n                                        </div>\n                                    :\n                                        null\n                                }\n                            </div>\n                        )\n                    })\n                }\n                </div>\n            </div>\n        )\n    }\n} ","import React, {Component} from 'react';\nimport HealthInfo from './HealthInfo';\nimport './detail.css';\nimport './request.css';\nimport ErrorDetail from './ErrorDetail';\n\nimport ResponseCheck from './ResponseCheck';\nexport default class DetailEntry extends Component {\n    constructor(props){\n        super(props);\n        this.state={\n            slideIn: \"slideInStart\",\n            requestInfo: {},\n            showRequestBody:false,\n            showResults: false,\n            showCards: false\n        };\n         this.showRequestBody = this.showRequestBody.bind(this);\n         this.showResults = this.showResults.bind(this);\n         this.showCards = this.showCards.bind(this);\n\n         // process the topics array\n         this.resultsCount = 0;\n         this.topics = '';\n         var i;\n         if (this.props.data.topics != null) {\n            for (i=0; i< this.props.data.topics.length; i++) {\n                if (this.props.data.topics[i] != null) {\n                    this.resultsCount = this.resultsCount + 1;\n\n                    if (i == 0) {\n                        this.topics = this.props.data.topics[i];\n                    } else {\n                        this.topics = this.topics + ', ' + this.props.data.topics[i];\n                    }\n                }\n            }\n        }\n        }\n\n    showRequestBody(){\n        this.setState(prevState=>{\n            return {showRequestBody:!prevState.showRequestBody}\n        });\n    }\n\n    showResults(){\n        this.setState(prevState=>{\n            return {showResults:!prevState.showResults}\n        });\n    }\n\n    showCards(){\n        this.setState(prevState=>{\n            return {showCards:!prevState.showCards}\n        });\n    }\n\n    unfurlJson(jsonData){\n        var divStyle = {\n            marginLeft:20\n          };\n\n        if(jsonData){\n            return Object.keys(jsonData).map(element=>{\n                // we don't want to show the actual token that was used\n                if(element===\"access_token\"){\n                    return(\n                    <div className=\"jsonData\" key={element} style={divStyle}>\n\n                    <span className=\"elementKey\">{element}</span>: <span className=\"elementBody\">-</span>\n                </div>\n                    )\n                }\n                return (\n                <div className=\"jsonData\" key={element} style={divStyle}>\n\n                    <span className=\"elementKey\">{element}</span>: <span className=\"elementBody\">{jsonData[element]===null?\"null\":typeof jsonData[element] === \"object\"?this.unfurlJson(jsonData[element]):jsonData[element]}</span>\n                </div>\n                )\n            });\n        }\n\n    }\n\n     render() {\n         return (\n             <div>\n                    <div className=\"detailWindow\"\n                    onClick={()=>{\n                        if(this.state.showRequestBody){\n                            this.setState({showRequestBody:false})\n                        }\n                        if(this.state.showResults){\n                            this.setState({showResults: false})\n                        }\n                        if(this.state.showCards){\n                            this.setState({showCards:false})\n                        }\n                    }}>\n\n                    <div className=\"col1\">\n                    <div className=\"healthInfoBox\">\n                            <HealthInfo data={this.props.data} />\n                    </div>\n                    {/* <div className=\"responseCheckBox\">\n                            <ResponseCheck />\n                    </div> */}\n                    </div>\n                    <div className=\"col1\">\n                    <ErrorDetail timeline={this.props.data.timeline}/>\n                    </div>\n\n                    <div className=\"col1 processTime\">\n                        <div className={\"errorDetail \" + [this.state.showRequestBody?\"filled\":\"empty\"]} onClick={this.showRequestBody}>\n                            Show Request Body\n                        </div>\n                        <div className={\"errorDetail \" + [this.state.showCards?\"filled\":\"empty\"]} onClick={this.showCards}>\n                            Show Cards\n                        </div>\n                        <div className={\"errorDetail \" + [this.state.showResults?\"filled\":\"empty\"]} onClick={this.showResults}>\n                            Topic Results <span>[ {this.resultsCount} ]</span>\n                        </div>\n                    </div>\n\n                </div>\n                {this.state.showRequestBody?\n                 <div className=\"requestBody\">\n                 { this.unfurlJson(JSON.parse(atob(this.props.data.requestBody))) }\n                 </div>\n                 :\n                 null}\n\n                 {this.state.showCards?\n                 <div className = \"requestBody\">\n                 { this.unfurlJson(JSON.parse(this.props.data.cardList)) }\n               </div>\n                  :\n                null}\n                 {this.state.showResults?\n                 <div className=\"requestBody\">&nbsp;&nbsp;Topics: {this.topics}</div>\n                 :null}\n\n             </div>\n         )\n\n    }\n}\n","import React, {Component} from 'react';\nimport './detail.css';\nimport './request.css';\nexport default class ResponseCheck extends Component {\n    constructor(props){\n        super(props);\n        this.state={\n            responseInfo: {}\n        };\n         \n    }\n\n     render() {\n         return (\n             <div>\n                 <div className=\"responseResults\">\n\n                     {this.props.results.length?this.props.results.map(element=>{\n                         return (\n\n                             Object.keys(element).map(key=>{\n                                 if(element[key]===true){\n                                     element[key]=\"true\";\n                                 }else if(element[key]===false){\n                                     element[key]=\"false\";\n                                 }\n                                 if(key==\"id\"){\n                                    return <div key={key} className=\"ruleInfoHeader\">Rule Id: {element[key]}</div>\n                                 }else{\n                                    return <div key={key} className={\"infoEntry \" + [element[key]?\"\":\"faded\"]}>{key}: {element[key]}</div>\n                                 }\n                         })\n                        )\n                     })\n                    :\n                    \"No rules found\"\n                    }\n                 </div>\n             </div>\n\n         )\n        }\n    }\n","import React, {Component} from 'react'\nimport { format } from 'date-fns'\nimport DetailEntry from './DetailEntry'\nimport './request.css'\n\nexport default class RequestEntry extends Component {\n    constructor(props) {\n        super(props);\n        let timestamp = this.props.data.timestamp;\n        if (!timestamp) {\n            timestamp = new Date()\n        }\n        timestamp = format(new Date(timestamp), 'yyyy-MM-dd   HH:mm:ss  O')\n        //console.log(`date: ${timestamp}`)\n        this.state = {\n            hookType: this.props.data.hookType,\n            fhirVersion: this.props.data.fhirVersion,\n            success: this.props.data.timeline ? this.props.data.timeline[4] : false,\n            timeStamp: timestamp,\n            viewDetails: false\n        };\n\n        this.openDetails = this.openDetails.bind(this);\n\n    }\n\n\n    openDetails() {\n\n        this.setState((prevState) => {\n            return { viewDetails: !prevState.viewDetails };\n        })\n\n\n    }\n    render() {\n        return (\n            <div>\n\n                <div\n                    className={\"requestEntry \" +\n                        [this.state.success ? \"successRequest \" : \"failureRequest \"] +\n                        [this.state.viewDetails ? \"active\" : \"\"]\n                    }\n                    onClick={this.openDetails}>\n                    <div className=\"element timestamp\">\n                        {this.state.timeStamp}\n                    </div>\n                    <div className=\"element fhirversion\">\n                        {this.state.fhirVersion}\n                    </div>\n                    <div className=\"element hooktype\">\n                        {this.state.hookType}\n                    </div>\n                    <div className=\"element successElement\">\n                        {this.state.success ? \"success\" : \"failure\"}\n                    </div>\n                </div>\n                {this.state.viewDetails ? <DetailEntry data={this.props.data} /> : null}\n            </div>\n        )\n    }\n}","import React, {Component} from 'react';\nimport './RequestLog.css';\nimport '../components/requestLog/request.css';\nimport RequestEntry from '../components/requestLog/RequestEntry';\nimport {getBaseUrl} from '../Utils';\n\nlet tempDatabase={\n}\n\nlet baseUrl = getBaseUrl();\nlet entriesPerPage = 15;\nlet pagesShown = 9;\nexport default class RequestLog extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            data: [],\n            dataToShow: null,\n            page: 1,\n            view: 1\n\n        };\n\n        // this.generateData = this.generateData.bind(this);    \n        this.getPage = this.getPage.bind(this);\n        this.renderPageNumbers = this.renderPageNumbers.bind(this);\n        this.getData = this.getData.bind(this);\n        this.increaseView = this.increaseView.bind(this);\n    }\n\n\n    componentDidMount() {\n        this.getData();\n        this.getPage(1);\n    }\n\n    async getData() {\n        // const requestData = await this.generateData();\n        const requestData = await fetch(baseUrl + 'api/requests', {\n            method: 'GET',\n            headers: {\n                'Accept': 'application/json'\n            }\n        }).then(response => {\n            return response.json();\n        }).catch(error => {\n            console.log(\"Couldn't load data, make sure the server is running.\")\n            console.log(\"error=\", error)\n        });\n\n        if (requestData) {\n            requestData.sort(this.compareTime);\n            this.setState({ data: requestData });\n            var webdata = requestData.requestBody;\n            this.getPage(1);\n        }\n\n\n    }\n    getPage(pageNumber) {\n        const startIndex = (pageNumber - 1) * entriesPerPage;\n        this.setState({ dataToShow: this.state.data.slice(startIndex, startIndex + entriesPerPage) })\n        this.setState({ page: pageNumber });\n    }\n\n    renderPageNumbers() {\n        const returnArray = [];\n        for (var i = 1; i <= Math.ceil(this.state.data.length / entriesPerPage); i++) {\n            returnArray.push(i);\n        }\n        return returnArray;\n    }\n\n    // async generateData() {\n    //     // temp function to make data\n    //     const currentTime = Date.now();\n    //     const numberOfDataPoints = 92;\n    //     var currentElement = {};\n    //     var variation = 1200000000;\n    //     var returnList = [];\n    //     for (var i = 0; i < numberOfDataPoints; i++) {\n    //         var negPos = Math.random() < 0.5 ? -1 : 1;\n\n    //         currentElement = {\n    //             \"timeStamp\": currentTime + Math.random() * negPos * variation,\n    //             \"fhirVersion\": Math.random() < 0.5 ? \"stu3\" : \"r4\",\n    //             \"hookType\": Math.random() < 0.5 ? \"MedicationRequest\" : \"OrderReview\",\n    //             // \"success\": this.props.data.timeline ? this.props.data.timeline[4] : false\n    //             // \"success\": Math.random() < 0.5 ? true : false\n    //             \"timeline\": ['', '', '', '', Math.random() < 0.5 ? true : false]\n    //         }\n    //         returnList.push(currentElement);\n\n    //     }\n    //     return returnList;\n    // }\n\n    compareTime(a, b) {\n        if (a.timestamp < b.timestamp) {\n            return 1;\n        }\n        if (a.timestamp > b.timestamp) {\n            return -1;\n\n        }\n        return 0;\n    }\n\n\n    increaseView(value) {\n        this.setState({ view: this.state.view + value });\n    }\n\n\n    render() {\n        const showForward = (this.state.view + pagesShown - 1) < (this.state.data.length / entriesPerPage);\n        const showBackward = this.state.view != 1;\n        // console.log(this.state.view);\n        // page should only render when switching pages.\n        // on page switch we scroll to top automatically.\n        window.scrollTo(0, 0)\n        return (\n            <div className=\"fontSetter\">\n                <div>\n                    {/* header section.  */}\n                    <div className=\"requestHeader fixed\">\n                        <div className=\"element timestamp\">\n                            Timestamp\n                        </div>\n                        <div className=\"element fhirversion\">\n                            FHIR version\n                        </div>\n                        <div className=\"element hooktype\">\n                            Hook Type\n                        </div>\n                        <div className=\"element successElement\">\n                            Success Status\n                        </div>\n\n                        <div className=\"pageTab\">\n                            {this.state.page}\n                        </div>\n                    </div>\n\n                    <div className=\"break\">\n                        {/* this manually prevents the topmost request entry\n                    from being hidden underneath the header */}\n                    </div>\n                    <div className=\"requestEntries\">\n                    {\n                        this.state.dataToShow ? this.state.dataToShow.map(element => {\n                            return <RequestEntry\n                                data={element}\n                                key={element.timestamp}\n                            />\n                        }) : <p></p>}\n                    </div>\n                </div>\n\n                <div className=\"pageNumber\">\n                    <span>\n                        <button className={\"viewButton backwardView \" + (!showBackward ? \"invisible\" : '')}\n                            onClick={() => { this.increaseView(-this.state.view + 1) }}>\n                            &lt;&lt;\n                            </button>\n                        <button className={\"viewButton backwardView \" + (!showBackward ? \"invisible\" : '')}\n                            onClick={() => { this.increaseView(-1) }}>\n                            &lt;\n                            </button>\n                    </span>\n                    {this.renderPageNumbers().map(number => {\n                        if (number >= this.state.view && number < this.state.view + pagesShown)\n                            return <button\n                                key={number}\n                                className={\"orderButton \" + ((number == this.state.view) ? \"firstButton \" : '') + [this.state.page === number ? \"active\" : \"\"]}\n                                onClick={() => this.getPage(number)}\n                            >\n                                {number}\n                            </button>\n                    })}\n                    <span>\n                        <button className={\"viewButton forwardView \" + (!showForward ? \"invisible\" : '')}\n                            onClick={() => { this.increaseView(1) }}>\n                            &gt;\n                            </button>\n                        <button className={\"viewButton forwardView \" + (!showForward ? \"invisible\" : '')}\n                            onClick={() => { this.increaseView(Math.ceil(this.state.data.length / entriesPerPage) - (this.state.view + pagesShown - 1)) }}>\n                            &gt;&gt;\n                            </button>\n                    </span>\n\n\n\n\n                </div>\n\n            </div>\n        )\n    }\n}","import React, {Component} from 'react';\nimport KJUR, {KEYUTIL} from 'jsrsasign';\n\nlet showContent = true;\nexport default class KeyEntry extends Component {\n    constructor(props){\n        super(props);\n        this.state={\n            animationClasses:\"animated animatedFadeInUp fadeInUp keyEntry\",\n            kid: this.props.kid,\n            jwt: this.props.jwt,\n            editMode: false,\n            showContent: true,\n            data: \"text/json;charset=utf-8,\" + encodeURIComponent(this.props.jwt)\n        };\n        this.updateContent = this.updateContent.bind(this);\n        this.handleChange = this.handleChange.bind(this);\n        this.deleteContent = this.deleteContent.bind(this);\n\n\n        \n    }\n\n    componentDidMount(){\n        try{\n            var jwtPub = JSON.parse(this.state.jwt);\n        }catch(e){\n            jwtPub = this.state.jwt;\n        }\n        try{\n            var pubKey = KEYUTIL.getKey(jwtPub);\n            var jwkPub = KEYUTIL.getJWKFromKey(pubKey);\n            this.setState({jwt: JSON.stringify(jwkPub)})\n            this.setState({data: \"text/json;charset=utf-8,\" + encodeURIComponent(JSON.stringify(jwkPub))});\n        }catch(e){\n        }\n    }\n    \n    handleChange(event) {\n            this.setState({jwt: event.target.value});\n      }\n    updateContent(event){\n        event.preventDefault();\n        this.setState({animationClasses:\"keyEntry\"});\n        console.log(this.state.animationClasses)\n        try{\n            var jwtPub = JSON.parse(this.state.jwt);\n        }catch(e){\n            jwtPub = this.state.jwt;\n        }\n        try{\n            var pubKey = KEYUTIL.getKey(jwtPub);\n            var jwkPub = KEYUTIL.getJWKFromKey(pubKey);\n            this.setState({jwt: JSON.stringify(jwkPub)})\n            // Dynamically generating a key id is counterintuitive when you \n            // can just add a new key that will auto-generate an ID.  \n            // In the unlikely event that users want to be able to directly\n            // edit an existing key (aka, acutally editing the text in\n            // the PEM string, or the JSON) this could be useful, but I doubt that anybody\n            // will be changing individual characters in an encoded string.  \n            \n            var keyID = KJUR.jws.JWS.getJWKthumbprint(jwkPub);\n            if(keyID !=this.state.kid){\n                this.props.updateIdCB(this.state.kid,keyID, jwkPub);\n                this.setState({kid: keyID});\n            }\n            this.setState({data: \"text/json;charset=utf-8,\" + encodeURIComponent(JSON.stringify(jwkPub))});\n            \n\n            \n        }catch(e){\n            this.props.updateIdCB(this.state.kid,this.state.kid,this.state.jwt);\n        }\n\n        \n        \n\n        if(!this.state.editMode){\n            this.setState({editMode:true});\n        }else{\n            this.setState({editMode:false});\n        }\n    }\n\n    deleteContent(){\n        this.props.deleteCB(this.state.kid);\n    }\n\n\n    render() {\n        const styles = {\n            'animationDelay':this.props.delay\n          }\n          if(this.state.showContent){\n            return (\n                <div>\n                <div\n                className={this.state.animationClasses +\" \"+ this.props.extraClass}\n                value={this.state.value}\n                style={styles}\n                >\n                <div className=\"jwtContent\">\n                <form onSubmit={this.updateContent} className=\"keyEntryForm\">\n                <div className=\"kidBox\">ID: {this.state.kid}\n                </div>\n                    {/* <div>ID: {this.state.kid}</div> */}\n                {this.state.editMode ? \n                <div>\n                    <input\n                    value={this.state.jwt}\n                    className=\"editInput\"\n                    onChange={(value)=> this.handleChange(value)}>\n                    </input>\n                </div>\n                :\n                <div className=\"keyData\">{this.state.jwt}</div>}\n                </form>\n    \n    \n                </div>\n                <div className=\"buttonContent\">\n                <button className={\"editingButton addButton \"+ this.props.extraClass} onClick={this.state.editMode?this.updateContent:()=>{this.setState({editMode: !this.state.editMode})}}>{this.state.editMode? <span className=\"glyphicon glyphicon-remove\"></span>:<span className=\"glyphicon glyphicon-pencil\"></span>}</button>\n                    <button className={\"editingButton deleteButton \"+this.props.extraClass} onClick={this.deleteContent}><span className=\"glyphicon glyphicon-trash\"></span></button>\n                    <a href={\"data:\"+this.state.data} download={this.state.kid + \".json\"}><button className={\"editingButton downloadButton \"+this.props.extraClass} ><span className=\"glyphicon glyphicon-download-alt\"></span></button></a>\n                </div>\n    \n            \n                </div>\n    \n                </div>\n            )\n          }else{\n              return null;\n          }\n       \n\n        \n    }\n}","import React, {Component} from 'react';\nimport KJUR, {KEYUTIL} from 'jsrsasign';\nlet animationClasses = \"animated animatedFadeInUp fadeInUp keyEntry editEntry\";\nexport default class EditEntry extends Component {\n    constructor(props){\n        super(props);\n        this.state={\n            kid: \"\",\n            jwt: \"\",\n            editMode: true,\n            generateKeyID: false,\n            uniqueKey: true\n        };\n\n        this.updateContent = this.updateContent.bind(this);\n        this.handleChange = this.handleChange.bind(this);\n        this.deleteContent = this.deleteContent.bind(this);\n        this.generateKeyID = this.generateKeyID.bind(this);\n        this.submitContent = this.submitContent.bind(this);\n\n        \n    }\n\n    handleChange(event, element) {\n            this.setState({[element]: event.target.value});\n            if(element===\"jwt\" & this.state.generateKeyID){\n                this.setState({kid: this.getKeyID(event.target.value)})\n            }\n    }\n\n    getKeyID(value){\n        var encodedKey = null;\n        try{\n            encodedKey=JSON.parse(value);\n        }catch(e){\n            // the key is not JSON formatted\n            encodedKey=value;\n        }\n        keyID = \"\";\n        try{\n            var pubKey = KEYUTIL.getKey(encodedKey);\n            // this part won't fail\n            var jwkPub = KEYUTIL.getJWKFromKey(pubKey);\n            var keyID = KJUR.jws.JWS.getJWKthumbprint(jwkPub);\n        }catch(e){\n            // the key cannot be retrieved.\n            console.log(e);\n        }\n        return keyID;\n    }\n    \n    generateKeyID(){\n        if(!this.state.generateKeyID){\n            // the key ID should be generated when the box gets ticked.\n            this.setState({kid:this.getKeyID(this.state.jwt)});\n        }\n        this.setState({generateKeyID: !this.state.generateKeyID})\n\n      }\n    updateContent(event){\n        try{\n            var jwtPub = JSON.parse(this.state.jwt);\n        }catch(e){\n            jwtPub = this.state.jwt;\n        }\n        try{\n            var pubKey = KEYUTIL.getKey(jwtPub);\n\n            var jwkPub = KEYUTIL.getJWKFromKey(pubKey);\n            this.setState({jwt: JSON.stringify(jwkPub)})\n            var keyID = KJUR.jws.JWS.getJWKthumbprint(jwkPub);\n            // this.props.updateIdCB(this.state.kid,keyID, jwkPub);\n            this.setState({kid: keyID});\n\n            \n        }catch(e){\n        }\n\n        \n        \n        event.preventDefault();\n        if(!this.state.editMode){\n            this.setState({editMode:true});\n        }else{\n            this.setState({editMode:false});\n        }\n    }\n\n    deleteContent(){\n        console.log(\"deleting\");\n        this.props.deleteCB(false);\n    }\n\n    submitContent(event){\n        event.preventDefault();\n        const unique = this.props.isUnique(this.state.kid);\n        if(!unique){\n            // implement a modal or an on screen notification\n            // instead of an alert.  Key clashes should be rare\n            // anyway.\n            alert(\"Key ID must be unique\");\n        }else{\n            this.props.submitContent(this.state.kid,this.state.jwt);\n        }\n        //this.props.submitContent(this.state.kid,this.state.jwt);\n    }\n\n\n    render() {\n        const styles = {\n            'animationDelay':this.props.delay\n          }\n\n            return (\n                <div id=\"editEntry\">\n                <div\n                className={animationClasses}\n                value={this.state.value}\n                style={styles}\n                >\n                <div className=\"jwtContent\">\n                <button id=\"editDeleteButton\" className=\"editingButton\" onClick={this.deleteContent}>X</button>\n                <form onSubmit={this.submitContent}>\n                <div className = \"kidBox\">\n                <div className=\"kidBox\">Key ID: </div>\n                    <input\n                    value={this.state.kid}\n                    className=\"editInput\"\n                    onChange={(value)=> this.handleChange(value,\"kid\")}>\n                    </input>\n                </div>\n\n                    {/* <div>ID: {this.state.kid}</div> */}\n\n                <div>\n                    <div className=\"kidBox\">Public Key: </div>\n                    <textarea\n                    value={this.state.jwt}\n                    className=\"editInput jwtTextArea\"\n                    onChange={(value)=> this.handleChange(value,\"jwt\")}>\n                    </textarea>\n                </div>\n\n                </form>\n                <span>Generate Key ID: </span><button className={\"editModeButton checkBox \"+ (this.state.generateKeyID?\"checkBoxPressed\":\"\")} onClick={this.generateKeyID}></button>\n                 <button className=\"clickButton\" onClick={this.submitContent}>Submit</button>\n                {/* <span>  Submit: </span><button className=\"clickButton checkBox\" ></button> */}\n\n    \n                </div>\n\n\n            \n                </div>\n    \n                </div>\n            )\n\n       \n\n        \n    }\n}","import React, {Component} from 'react';\n\nimport './KeyInterface.css';\nimport KJUR, {KEYUTIL} from 'jsrsasign';\nimport KeyEntry from '../components/publicKey/KeyEntry';\nimport EditEntry from '../components/publicKey/EditEntry';\nimport {getBaseUrl} from '../Utils';\n\nlet baseUrl = getBaseUrl();\n\nexport default class KeyInterface extends Component{\n    constructor(props){\n        super(props);\n        this.state = { \n            jwtJson: [],\n            createNew: false,\n            editing: \"\"\n        };\n\n        this.deleteContent = this.deleteContent.bind(this);\n        this.newItem = this.newItem.bind(this);\n        this.exitNewItem = this.exitNewItem.bind(this);\n        this.isUnique = this.isUnique.bind(this);\n        this.updateIdCB = this.updateIdCB.bind(this);\n        this.returnItem = this.returnItem.bind(this);\n        this.submitContent = this.submitContent.bind(this);\n        this.saveData = this.saveData.bind(this);\n        this.initData = this.initData.bind(this);\n\n    }\n\n    async componentDidMount(){\n        if(this.props.doFetch){\n            var jwtData = await fetch(baseUrl+'api/public', {\n                method: 'GET',\n                headers: {\n                    'Accept': 'application/json'\n                }\n                }).then(response=>{\n                    return response.json();\n                }).catch(error=>{\n                    console.log(\"Could not load data, make sure the server is running.\")\n                });\n            this.initData(jwtData);\n        }\n\n    }\n    async saveData(keyObject){\n        // const jwtData = this.state.jwtJson;\n        // const result = {};\n        // var key;\n        // // convert the array back into JSON\n        // jwtData.forEach(element=>{\n        //     key = Object.keys(element)[0];\n        //     result[key] = element[key];\n        // });\n        const keyId = Object.keys(keyObject)[0];\n\n        const key = keyObject[keyId];\n        const result = {\"id\":keyId,\"key\":key};\n        if(this.props.doFetch){\n            await fetch(baseUrl+'api/public', {\n                method: 'POST',\n                headers: {\n                    'Accept': 'application/json',\n                    'Content': 'application/json'\n                },\n                body: JSON.stringify(result)\n                }).then(response=>{\n                    console.log(\"Saved the data\")\n                }).catch(error=>{\n                    console.log(\"Could not save data\");\n                });\n        }\n\n    }\n\n    async deleteData(id){\n        if(this.props.doFetch){\n            await fetch(baseUrl +'api/public/'+id, {\n                method: 'DELETE',\n                headers: {\n                    'Accept': 'application/json',\n                    'Content': 'application/json'\n                }\n                }).then(response=>{\n                    console.log(\"Deleted the data\")\n                }).catch(error=>{\n                    console.log(\"Could not save data\");\n                });;\n        }\n\n    }\n    async editData(oldId,keyObject){\n        const keyId = Object.keys(keyObject)[0];\n        const key = keyObject[keyId];\n        const result = {\"id\":keyId,\"key\":JSON.stringify(key)};\n        if(this.props.doFetch){\n            await fetch(baseUrl +'api/public/'+oldId, {\n                method: 'PUT',\n                headers: {\n                    'Accept': 'application/json',\n                    'Contetn': 'application/json'\n                },\n                body: JSON.stringify(result)\n                }).then(response=>{\n                    console.log(\"Saved the data\")\n                }).catch(error=>{\n                    console.log(\"Could not save data\");\n                });;\n        }\n    }\n    initData(jwtData){\n        if(jwtData){\n            const peopleArray =[];\n            Object.keys(jwtData).map(key =>{\n                const id = jwtData[key][\"id\"];\n                peopleArray.push({[id]:jwtData[key][\"key\"]})\n            })\n            this.setState({jwtJson:peopleArray});\n        }\n\n    }\n    updateIdCB(oldId, newId, newContent){\n        let changeBool = true;\n        this.state.jwtJson.map(element=>{\n\n            if(JSON.stringify(element[oldId])==JSON.stringify(newContent)){\n                changeBool = false;\n            }\n        });\n        if(changeBool){\n            this.setState(prevState =>{\n                var intermed = prevState.jwtJson;\n                var updatedIdArray = intermed.map(key=>{\n                    if(Object.keys(key)[0]==oldId){\n                        console.log(newContent);\n                        console.log(key[oldId]);\n                        return {[newId]:JSON.stringify(newContent)};\n                    }else{\n                        return key;\n                    }\n                });\n                return {jwtJson: updatedIdArray};\n            }, ()=>this.editData(oldId,{[newId]:newContent}));\n        }\n\n           \n    }\n    deleteContent = (id) =>{\n        this.setState(prevState =>{\n            var intermed = prevState.jwtJson;\n            console.log(intermed);\n            // filters object from array if it has the same ID passed into\n            // the function.\n            return {jwtJson: intermed.filter(key=>Object.keys(key)[0] !== id)};\n        }, ()=>{this.deleteData(id)});\n    }\n\n    exitNewItem = (save) =>{\n            this.setState({createNew:false});\n            this.setState({editing:\"\"});\n    }\n\n    newItem(){\n\n        this.setState({createNew:true});\n        this.setState({editing:\"editing\"});\n        // this.setState({jwtJson: [{\"aslkaslk\":{\"null\":\"null\"}}, ...this.state.jwtJson]});\n        // console.log(this.state.jwtJson);\n    }\n\n    isUnique(kid){\n        const length = this.state.jwtJson.filter(key=>Object.keys(key)[0] == kid).length;\n        return length===0;\n    }\n\n    submitContent(kid,jwt){\n        this.setState({createNew:false});\n        this.setState({editing:\"\"});\n        const newEntry = {[kid]:jwt};\n        this.setState(prevState =>{\n            return {jwtJson: [newEntry,...prevState.jwtJson]}\n        },()=>{this.saveData({[kid]:jwt})});\n\n        \n    }\n    returnItem(){\n        if(this.state.createNew){\n            return <EditEntry \n            deleteCB={this.exitNewItem}\n            isUnique={this.isUnique}\n            submitContent={this.submitContent}\n            />\n        }\n    }\n\n    \n\n    render() {\n        var i = 0;\n        var keyID;\n        var keyContent;\n            return (\n                <div className=\"publicKeyInterface\">\n                <div className=\"button-wrapper\">\n                    <button id=\"addButton\" className=\"newEntryButton\" onClick={this.newItem}><span className=\"glyphicon glyphicon-plus-sign\"></span></button>\n                </div>\n                <div className=\"button-wrapper\">\n                    <button className=\"newEntryButton reloadButton\" onClick={this.initData}><span className=\"glyphicon glyphicon-retweet\"></span></button>\n                </div>\n\n                <div className = \"borderDiv\">\n                </div>\n                {this.returnItem()}\n\n                {this.state.jwtJson.map(key => {\n                    keyID = Object.keys(key)[0];\n                    i+=0.2;\n                    keyContent = key[keyID];\n\n                  return <KeyEntry\n                  extraClass = {this.state.editing}\n                  deleteCB={this.deleteContent} \n                  updateIdCB={this.updateIdCB}\n                  kid = {keyID} \n                  delay={i+\"s\"} \n                  jwt ={keyContent} \n                  key={keyID}/>\n                })}\n                </div>\n            )\n\n    }\n}\n\n\n\n","import React, {Component} from 'react';\nimport {codeSystemConversion} from './ComponentConstants';\nimport Select from './Select';\nimport './DataTable.css';\n\nconst genderCodeOptions=[\n    {key:null,value:\"\",text:\"\"},\n    {key:\"M\",value:\"M\",text:\"male\"},\n    {key:\"F\",value:\"F\",text:\"female\"}\n];\n\nconst trueFalse=[\n    {key:true,value:true,text:\"true\"},\n    {key:false,value:false,text:\"false\"}\n]\n\nconst stateOptions = [\n    { key: null, value: \"\", text: \"\"},\n    { key: 'AL', value: 'AL', text: 'Alabama' },\n    { key: 'AK', value: 'AK', text: 'Alaska' },\n    { key: 'AZ', value: 'AZ', text: 'Arizona' },\n    { key: 'AR', value: 'AR', text: 'Arkansas' },\n    { key: 'CA', value: 'CA', text: 'California' },\n    { key: 'CO', value: 'CO', text: 'Colorado' },\n    { key: 'CT', value: 'CT', text: 'Connecticut' },\n    { key: 'DE', value: 'DE', text: 'Delaware' },\n    { key: 'DC', value: 'DC', text: 'District Of Columbia' },\n    { key: 'FL', value: 'FL', text: 'Florida' },\n    { key: 'GA', value: 'GA', text: 'Georgia' },\n    { key: 'HI', value: 'HI', text: 'Hawaii' },\n    { key: 'ID', value: 'ID', text: 'Idaho' },\n    { key: 'IL', value: 'IL', text: 'Illinois' },\n    { key: 'IN', value: 'IN', text: 'Indiana' },\n    { key: 'IA', value: 'IA', text: 'Iowa' },\n    { key: 'KS', value: 'KS', text: 'Kansas' },\n    { key: 'KY', value: 'KY', text: 'Kentucky' },\n    { key: 'LA', value: 'LA', text: 'Louisiana' },\n    { key: 'ME', value: 'ME', text: 'Maine' },\n    { key: 'MD', value: 'MD', text: 'Maryland' },\n    { key: 'MA', value: 'MA', text: 'Massachusetts' },\n    { key: 'MI', value: 'MI', text: 'Michigan' },\n    { key: 'MN', value: 'MN', text: 'Minnesota' },\n    { key: 'MS', value: 'MS', text: 'Mississippi' },\n    { key: 'MO', value: 'MO', text: 'Missouri' },\n    { key: 'MT', value: 'MT', text: 'Montana' },\n    { key: 'NE', value: 'NE', text: 'Nebraska' },\n    { key: 'NV', value: 'NV', text: 'Nevada' },\n    { key: 'NH', value: 'NH', text: 'New Hampshire' },\n    { key: 'NJ', value: 'NJ', text: 'New Jersey' },\n    { key: 'NM', value: 'NM', text: 'New Mexico' },\n    { key: 'NY', value: 'NY', text: 'New York' },\n    { key: 'NC', value: 'NC', text: 'North Carolina' },\n    { key: 'ND', value: 'ND', text: 'North Dakota' },\n    { key: 'OH', value: 'OH', text: 'Ohio' },\n    { key: 'OK', value: 'OK', text: 'Oklahoma' },\n    { key: 'OR', value: 'OR', text: 'Oregon' },\n    { key: 'PA', value: 'PA', text: 'Pennsylvania' },\n    { key: 'RI', value: 'RI', text: 'Rhode Island' },\n    { key: 'SC', value: 'SC', text: 'South Carolina' },\n    { key: 'SD', value: 'SD', text: 'South Dakota' },\n    { key: 'TN', value: 'TN', text: 'Tennessee' },\n    { key: 'TX', value: 'TX', text: 'Texas' },\n    { key: 'UT', value: 'UT', text: 'Utah' },\n    { key: 'VT', value: 'VT', text: 'Vermont' },\n    { key: 'VA', value: 'VA', text: 'Virginia' },\n    { key: 'WA', value: 'WA', text: 'Washington' },\n    { key: 'WV', value: 'WV', text: 'West Virginia' },\n    { key: 'WI', value: 'WI', text: 'Wisconsin' },\n    { key: 'WY', value: 'WY', text: 'Wyoming' },\n]\n// receives data as a prop\nexport default class TableRow extends Component {\n    constructor(props){\n        super(props);\n        this.state={\n            data: {}\n        };\n    }\n\n    componentDidMount() {\n        const data = this.props.data;\n        Object.keys(data).forEach(key => {\n            // replace null values with a '-'\n            if(data[key] == null) {\n                data[key] = \"-\";\n            }\n        });\n\n        this.setState({data});\n    }\n\n    render() {\n        return(\n            <tr>\n                <td>{this.state.data.readableTopic}</td>\n                <td>{this.state.data.payer}</td>\n                <td>{this.state.data.code}</td>\n                <td>{codeSystemConversion[this.state.data.codeSystem]}</td>\n                <td>{this.state.data.fhirVersion}</td>\n                <td><a href={this.state.data.link}>download</a></td>\n            </tr>\n        )\n    }\n} ","import React, {Component} from 'react';\nimport TableRow from './TableRow';\nimport './DataTable.css';\nimport {getBaseUrl} from '../Utils';\n\nlet baseUrl = getBaseUrl();\n\nexport default class DataTable extends Component {\n    constructor(props){\n        super(props);\n        this.state={\n            rules: {}\n        };\n    }\n\n    componentDidMount(){\n        document.body.style.backgroundColor = \"white\"// Set the style\n              const data = fetch(baseUrl + 'api/data', {\n\n            method: 'GET',\n            headers: {\n                'Accept': 'application/json'\n            }\n            }).then(response=>{\n                return response.json();\n            }).then(json=>{\n                console.log(json);\n                this.setState({rules:json});\n            })\n            .catch(error=>{\n                console.log(error);\n                console.log(\"Couldn't load data, make sure the server is running.\")\n            });\n        console.log(data);\n    }\n\n    render() {\n        return (\n            <div className=\"dataTable\">\n                <form action=\"/reload\" method=\"post\">\n                    <div class=\"spacer\"></div>\n                    <span class=\"reload\">\n                        <input name=\"vsac_api_key\" type=\"password\" placeholder=\"VSAC API KEY\"/>\n                        <input type=\"submit\" value=\"Reload Data\"/>\n                    </span>\n                </form>\n                <div>\n                    <table className=\"table-responsive table-striped table\">\n                        <thead>\n                        <tr>\n                            <td>Topic</td>\n                            <td>Payor</td>\n                            <td>Relevant Code</td>\n                            <td>Code System</td>\n                            <td>FHIR Version</td>\n                            <td>Rule</td>\n                        </tr>\n                        </thead>\n                        <tbody>\n                        {(this.state.rules instanceof Array)?this.state.rules.map((rule)=>{\n                            return(<TableRow data = {rule} key = {rule.id} home = {this.props.home}></TableRow>)\n                            //return(<TableRow data = {rule} handleDeleteCB = {this.handleDeleteCB} key = {rule.id} edit={rule.id===this.state.editId} home={this.props.home}></TableRow>)\n                        }):null}\n                        </tbody>\n                    </table>\n                </div>\n            </div>\n        )\n    }\n}","import React, {Component} from 'react';\nimport {codeSystemConversion} from './ComponentConstants';\nimport Select from './Select';\nimport './DataTable.css';\n\n\n// receives resource as a prop\nexport default class FhirTableRow extends Component {\n    constructor(props){\n        super(props);\n        this.state={\n            resource: {}\n        };\n    }\n\n    componentDidMount() {\n        const resource = this.props.resource;\n        Object.keys(resource).forEach(key => {\n            // replace null values with a '-'\n            if(resource[key] == null) {\n                resource[key] = \"-\";\n            }\n        });\n\n        this.setState({resource});\n    }\n\n    render() {\n        return(\n            <tr>\n                <td>{this.state.resource.id}</td>\n                <td>{this.state.resource.resourceType}</td>\n                <td>{this.state.resource.readableTopic}</td>\n                <td>{this.state.resource.fhirVersion}</td>\n                <td>{this.state.resource.filename}</td>\n                <td>{this.state.resource.url}</td>\n                <td><a href={this.state.resource.link}>download</a></td>\n            </tr>\n        )\n    }\n} ","import React, {Component} from 'react';\nimport FhirTableRow from './FhirTableRow';\nimport './DataTable.css';\nimport {getBaseUrl} from '../Utils';\n\nlet baseUrl = getBaseUrl();\n\nexport default class FhirTable extends Component {\n    constructor(props){\n        super(props);\n        this.state={\n            resources: {}\n        };\n    }\n\n    componentDidMount(){\n        document.body.style.backgroundColor = \"white\"// Set the style\n              const data = fetch(baseUrl + 'api/fhir', {\n\n            method: 'GET',\n            headers: {\n                'Accept': 'application/json'\n            }\n            }).then(response=>{\n                return response.json();\n            }).then(json=>{\n                console.log(json);\n                this.setState({resources:json});\n            })\n            .catch(error=>{\n                console.log(error);\n                console.log(\"Couldn't load fhir data, make sure the server is running.\")\n            });\n        console.log(data);\n    }\n\n    render() {\n        return (\n            <div className=\"fhirTable\">\n                <div>\n                    <table className=\"table-responsive table-striped table\">\n                        <thead>\n                        <tr>\n                            <td>ID</td>\n                            <td>Resource Type</td>\n                            <td>Topic</td>\n                            <td>Fhir Version</td>\n                            <td>Filename</td>\n                            <td>URL</td>\n                            <td>Download</td>\n                        </tr>\n                        </thead>\n                        <tbody>\n                        {(this.state.resources instanceof Array)?this.state.resources.map((resource)=>{\n                            return(<FhirTableRow resource = {resource} key = {resource.id} home = {this.props.home}></FhirTableRow>)\n                        //    //return(<TableRow data = {rule} handleDeleteCB = {this.handleDeleteCB} key = {rule.id} edit={rule.id===this.state.editId} home={this.props.home}></TableRow>)\n                        }):null}\n                        </tbody>\n                    </table>\n                </div>\n            </div>\n        )\n    }\n}","import React, {Component} from 'react';\nimport DataTable from './DataTable';\n//import './HomePage.css';\nimport {getBaseUrl} from '../Utils';\nimport {getHostOrg} from '../Utils';\n\nlet baseUrl = getBaseUrl();\nlet hostOrg = getHostOrg();\n\nconst links = [\n    {\n        name: \"FHIR R4 endpoint\",\n        link: baseUrl + \"r4/cds-services\",\n        description: \"The provider systems would interact with the CDS Hooks endpoints. These endpoints provide the JSON descriptions of the CDS Hooks services.\"\n    },\n    {\n        name: \"Rules endpoint\",\n        link: baseUrl + \"api/data\",\n        description: \"Endpoint for retrieving and manipulating rules.\"\n    },\n    {\n        name: \"Requests endpoint\",\n        link: baseUrl + \"api/requests\",\n        description: \"Endpoint for retrieving the requests made to the server as JSON.\"\n    },\n    {\n        name: \"Public Key endpoint\",\n        link: baseUrl + \"api/public\",\n        description: \"Endpoint for retrieving keys from and adding keys to the server database\"\n    },\n    \n]\nexport default class HomePage extends Component {\n    constructor(props){\n        super(props);\n        this.state={\n            requestInfo: {}\n        };\n         \n    }\n    componentDidMount(){\n        document.body.style.marginLeft = \"15px\"// Set the style\n    }\n    displayHostTest(){\n        switch (hostOrg) {\n            case \"AHRQ\":\n                return <p>This server hosts the prototype of the Documentation Requirement Lookup Service (DRLS) clinical decision support (CDS) service. The DRLS CDS Service is a software project that conforms to the implementation guides for <a href=\"http://build.fhir.org/ig/HL7/davinci-crd/\">Coverage Requirements Discovery (CRD)</a> and <a href=\"http://build.fhir.org/ig/HL7/davinci-dtr/\">Documentation Templates and Rules (DTR)</a> developed by the MITRE Corporation for the Centers for Medicare &amp; Medicaid Services (CMS), and under the <a href=\"http://www.hl7.org/about/davinci/index.cfm?ref=common\">Da Vinci Project</a> within the <a href=\"http://www.hl7.org/\">HL7 standards developing organization</a>. It was developed in support of the <a href=\"https://www.cms.gov/Research-Statistics-Data-and-Systems/Monitoring-Programs/Medicare-FFS-Compliance-Programs/LookupServiceInitiative.html\">DRLS Initiative</a> led by CMS, with hosting provided by the <a href=\"https://www.ahrq.gov/\">Agency for Healthcare Research and Quality (AHRQ)</a> as part of an inter-agency collaboration. In addition, several DRLS CDS artifacts are being hosted on AHRQ’s <a href=\"https://cds.ahrq.gov/\">CDS Connect</a> repository.\n                    <br/><br/>CRD is implemented with <a href=\"https://cds-hooks.org/\" target=\"#\">CDS Hooks</a>. It returns responses to CRD queries based on a small database of example rules. The example rules can be managed through the <a href=\"/data\">administrative interface</a>.</p>;\n            break;\n            case \"HSPC\":\n                return <p>This server hosts the prototype of the Documentation Requirement Lookup Service (DRLS) clinical decision support (CDS) service. The DRLS CDS Service is a software project that conforms to the implementation guides for <a href=\"http://build.fhir.org/ig/HL7/davinci-crd/\">Coverage Requirements Discovery (CRD)</a> and <a href=\"http://build.fhir.org/ig/HL7/davinci-dtr/\">Documentation Templates and Rules (DTR)</a> developed by the MITRE Corporation for the Centers for Medicare &amp; Medicaid Services (CMS), and under the <a href=\"http://www.hl7.org/about/davinci/index.cfm?ref=common\">Da Vinci Project</a> within the <a href=\"http://www.hl7.org/\">HL7 standards developing organization</a>. It was developed in support of the <a href=\"https://www.cms.gov/Research-Statistics-Data-and-Systems/Monitoring-Programs/Medicare-FFS-Compliance-Programs/LookupServiceInitiative.html\">DRLS Initiative</a> led by CMS, with hosting provided by the <a href=\"https://www.hspconsortium.org/\">Healthcare Services Platform Consortium (HSPC)</a>. In addition, several DRLS CDS artifacts are being hosted on <a href=\"https://www.ahrq.gov/\">Agency for Healthcare Research and Quality (AHRQ)</a>’s <a href=\"https://cds.ahrq.gov/\">CDS Connect</a> repository.\n                    <br/><br/>CRD is implemented with <a href=\"https://cds-hooks.org/\" target=\"#\">CDS Hooks</a>. It returns responses to CRD queries based on a small database of example rules. The example rules can be managed through the <a href=\"/data\">administrative interface</a>.</p>;\n            break;\n            default:\n                return <p>CRD is implemented with <a href=\"https://cds-hooks.org/\" target=\"#\">CDS Hooks</a>. It returns responses to CRD queries based on a small database of example rules. The example rules can be managed through the <a href=\"/data\">administrative interface</a>.</p>\n        }\n    }\n     render() {\n         return (\n             <div >\n                 <h1 className=\"header\" id=\"henlo\">Coverage Requirements Discovery (CRD) Reference Implementation (RI)</h1>\n                 {this.displayHostTest()}\n                <table className=\"table\">\n                    <thead>\n                    <tr>\n                        <th>\n\n                        </th>\n                        <th>\n                            URI\n                        </th>\n                        <th>\n                            Description\n                        </th>\n                    </tr>\n                    </thead>\n                    <tbody>\n                        {links.map((element)=>{\n                            return(<tr key = {element.name}>\n                            <th scope=\"row\">\n                                {element.name}\n                            </th>\n                            <td>\n                                <a href={element.link}>\n                                    {element.link}\n                                </a>\n                            </td>\n                            <td>\n                                {element.description}\n                            </td>\n                        </tr>)\n                        })}\n                    </tbody>\n\n                </table>\n             </div>\n\n         )\n\n    }\n} \n","import React, { Component } from 'react';\nimport {getUrlParameter} from './url';\nimport { getBaseUrl, getBackend } from '../../Utils';\nimport { Dropdown } from 'semantic-ui-react'\n\nimport './launch.css';\n\nexport default class Launcher extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            serviceUri: '',\n            clientId: '',\n            clients: [],\n        };\n        this.baseUrl = getBaseUrl();\n        this.launch = this.launch.bind(this);\n        this.save = this.save.bind(this);\n        this.fetchClients = this.fetchClients.bind(this);\n        this.handleChange = this.handleChange.bind(this);\n        this.handleInput = this.handleInput.bind(this);\n    }\n\n    componentDidMount() {\n        fetch(`${this.baseUrl}api/clients`, {method: \"GET\"}).then(response => response.json()).then((data) => {\n            const serviceUri = getUrlParameter(\"iss\");\n            this.setState({clients: data});\n            console.log(data);\n            if (serviceUri) {\n                // provided iss\n                const client = data.find(d => d.iss === serviceUri);\n                if(client) {\n                    // auto-launch\n                    this.launch(client.iss, client.client_id);\n                } else {\n                    this.setState({serviceUri});\n                }\n            }\n        })\n\n\n    }\n\n    fetchClients() {\n        const baseUrl = getBackend();\n        return fetch(`${baseUrl}api/clients`, {method: \"GET\"}).then(response => response.json()).then(data=>this.setState({clients: data}));\n    }\n    \n    save(serviceUri, clientId) {\n        fetch(`${this.baseUrl}api/clients`, {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify({\n                iss: serviceUri,\n                client_id: clientId\n            })\n        })\n    }\n\n    launch(serviceUri, clientId) {\n        // const serviceUri = client.iss;\n        // const clientId = client.client_id;\n        localStorage.setItem(\"lastAccessedServiceUri\", serviceUri);\n        const scope = [\"launch\", \"user/Observation.read\", \"user/Patient.read\", \"patient/Observation.read\", \"patient/Patient.read\", \"patient/Coverage.read\", \"patient/Condition.read\", \"user/Practitioner.read\"].join(\" \");\n        const state = Math.round(Math.random() * 100000000).toString();\n        const launchUri = window.location.protocol + \"//\" + window.location.host + window.location.pathname;\n        const redirectUri = launchUri.replace(\"launch\", \"index\");\n\n        var conformanceUri = serviceUri + \"/metadata?_format=json\";\n        let conformanceStatement;\n        const conformanceGet = new XMLHttpRequest();\n        conformanceGet.open(\"GET\", conformanceUri);\n        conformanceGet.setRequestHeader(\"Content-Type\", \"application/json\");\n        conformanceGet.setRequestHeader(\"Accept\", \"application/json\");\n\n        conformanceGet.onload = function () {\n            if (conformanceGet.status === 200) {\n                try {\n\n                    conformanceStatement = JSON.parse(conformanceGet.responseText);\n                } catch (e) {\n                    const error = \"Unable to parse conformance statement.\";\n                    document.body.innerText = error;\n                    return;\n                }\n                redirect(conformanceStatement);\n            } else {\n                const error = \"Conformance statement request failed. Returned status: \" + conformanceGet.status;\n                document.body.innerText = error;\n                return;\n            }\n        };\n        conformanceGet.send();\n\n        function redirect(conformanceStatement) {\n            var authUri, tokenUri;\n            var smartExtension = conformanceStatement.rest[0].security.extension.filter(function(e) {\n                return e.url === \"http://fhir-registry.smarthealthit.org/StructureDefinition/oauth-uris\";\n            });\n        \n            smartExtension[0].extension.forEach(function(arg) {\n                if (arg.url === \"authorize\") {\n                authUri = arg.valueUri;\n                } else if (arg.url === \"token\") {\n                tokenUri = arg.valueUri;\n                }\n            });\n        \n            // retain a couple parameters in the session for later use\n            sessionStorage[state] = JSON.stringify({\n                client_id: clientId, // this is how the key should be formatted\n                serviceUri: serviceUri,\n                redirect_uri: redirectUri,\n                tokenUri: tokenUri,\n            });\n        \n            // finally, redirect the browser to the authorizatin server and pass the needed\n            // parameters for the authorization request in the URL\n            let authRedirect =         \n                authUri +\n                \"?\" +\n                \"response_type=code&\" +\n                \"client_id=\" +\n                encodeURIComponent(clientId) +\n                \"&\" +\n                \"scope=\" +\n                encodeURIComponent(scope) +\n                \"&\" +\n                \"redirect_uri=\" +\n                encodeURIComponent(redirectUri) +\n                \"&\" +\n                \"aud=\" +\n                encodeURIComponent(serviceUri) +\n                \"&\" +\n                \"state=\" +\n                state;\n            \n            console.log(authRedirect);\n            window.location.href = authRedirect;\n            }\n    }\n\n\n    handleChange(e, { value }){\n        const client = JSON.parse(value);\n        this.setState({ serviceUri: client.iss, clientId: client.client_id });\n    } \n\n    handleInput(e, name) {\n        this.setState({[name]: e.target.value});\n    }\n    renderClients() {\n        const clients = this.state.clients;\n        const options = clients.map((client) =>{\n            return {\n                key: client.client_id,\n                value: JSON.stringify(client),\n                text: `${client.iss} - ${client.client_id}`\n            }\n        })\n\n        const currentClient = {\n            iss: this.state.serviceUri,\n            client_id: this.state.clientId\n        }\n        return (<div className = \"clientDropdown\">\n            <div>Saved Clients: </div>\n            <Dropdown \n                placeholder='Select client'\n                fluid\n                search\n                selection\n                onChange = {this.handleChange}\n                value = {JSON.stringify(currentClient)}\n                options={options}\n            />\n        </div>)\n    }\n\n    render() {\n\n        return <div> \n            {this.renderClients()}\n            <div>\n                ISS: \n                <input \n                className=\"client-input\" \n                value={this.state.serviceUri} \n                onChange={(e)=> {this.handleInput(e,\"serviceUri\")}}/>\n            </div>\n            <div>\n                Client Id: \n                <input className=\"client-input\" \n                value={this.state.clientId} \n                onChange={(e)=> {this.handleInput(e,\"clientId\")}}/>\n            </div>\n            <button \n            variant=\"Primary\" \n            onClick = {() => {this.launch(this.state.serviceUri, this.state.clientId)}}>\n                Launch!\n            </button>\n            <button \n            variant=\"Primary\" \n            onClick = {() => {this.save(this.state.serviceUri, this.state.clientId)}}>\n                Save Client\n            </button>\n        </div>\n    }\n}","import { makeStyles } from '@material-ui/core/styles';\n\nexport default makeStyles(\n  theme => ({\n    inputs: {\n        marginTop: '15px',\n        height:'310px',\n    },\n    resourceBar: {\n        border: '1px solid black',\n        borderRadius: '15px',\n        height: '40px',\n        padding: '9px',\n        transition: 'height .5s',\n        overflow:'hidden',\n    },\n    openBar: {\n        height: '350px'\n    },\n    genderBox: {\n        // border: '1px solid #111',\n        display: 'inline-block',\n        borderRadius: '5px',\n        width: '120px',\n        padding: '0 15px 15px 15px',\n    },\n    ageBox: {\n        marginLeft:'15px',\n        display: 'inline-block',\n\n    },\n    stateOptions: {\n        marginLeft:'15px',\n        width: '160px'\n    },\n    menu: {\n        position: 'fixed',\n        zIndex: 1000,\n        top: '20%',\n        left: '35%',\n        height: '400px',\n        minWidth: '400px',\n        backgroundColor: 'white',\n        border: '1px solid #444',\n        borderRadius: '5px',\n        float:'left',\n    },\n    backdrop: {\n        position: 'fixed',\n        height: '100%',\n        width: '100%',\n        top: 0,\n        left: 0,\n        zIndex: 999,\n        backgroundColor: '#999A'\n    },\n    loadButton:{\n        marginTop: '15px',\n    },\n    menuHeader: {\n        position: 'fixed',\n        backgroundColor: 'white',\n        zIndex:1002,\n        padding:'5px',\n        height: '30px',\n        width:'385px',\n        borderBottom: '1px solid black'\n    },\n    jsonInput: {\n        float: 'right',\n    },\n    orgBox: {\n        float:'left',\n    }\n  }),\n\n  { name: 'index', index: 1 }\n);\n","import React, { useEffect, useState } from 'react';\nimport useStyles from '../../styles';\nimport PropTypes from 'prop-types';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport TextField from '@material-ui/core/TextField';\nimport Select from '@material-ui/core/Select';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { stateOptions } from '../../constants';\n\nexport default function StateSelect(props) {\n    const classes = useStyles();\n    const { callback, state, label, options} = props;\n\n    return (\n        <>\n            <FormControl className={classes.stateOptions}>\n                <InputLabel id=\"demo-simple-select-label\">{label}</InputLabel>\n                <Select\n                    labelId=\"demo-simple-select-label\"\n                    id=\"demo-simple-select\"\n                    value={state || ''}\n                    onChange={callback}\n                >\n                    {options.map((option) => {\n                        return  <MenuItem key={option.key} value={option.value}>{option.text}</MenuItem>\n\n                    })}\n                    <MenuItem value={''}>\n                        <em>None</em>\n                    </MenuItem>\n                </Select>\n            </FormControl>\n        </>\n    );\n}\n\nStateSelect.propTypes = {\n    callback: PropTypes.func\n};\n","import React, { useEffect, useState } from 'react';\nimport useStyles from '../../styles';\nimport PropTypes from 'prop-types';\nimport JSONInput from 'react-json-editor-ajrm';\nimport locale from 'react-json-editor-ajrm/locale/en';\n\nexport default function JsonBox(props) {\n    const classes = useStyles();\n    const { callback, placeholder } = props;\n    const [open, setOpen] = useState(false)\n\n    return (\n        <>\n            <div className={classes.jsonInput}>\n                {open ? \n                <>\n                <button onClick={()=>{setOpen(false)}}>hide</button>\n                    <JSONInput\n                        id          = 'ex2'\n                        placeholder = { placeholder }\n                        locale      = { locale }\n                        height      = '280px'\n                        onChange = {callback}\n                    />\n                </>\n                :\n                <button onClick={()=>{setOpen(true)}}> Edit Json </button>\n\n                }\n\n            </div>\n        </>\n    );\n}\n\nJsonBox.propTypes = {\n    onClose: PropTypes.func,\n    selectedValue: PropTypes.string,\n    open: PropTypes.bool\n};\n","import React, { useEffect, useState } from 'react';\nimport useStyles from '../styles';\nimport PropTypes from 'prop-types';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport TextField from '@material-ui/core/TextField';\nimport Select from '@material-ui/core/Select';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport StateSelect from './Sections/StateSelect';\nimport { stateOptions } from '../constants';\nimport JsonBox from './Sections/JsonBox';\n\nexport default function PatientInfo(props) {\n    const classes = useStyles();\n    const { callback, patient } = props;\n\n    const handleChange = (element, value) => {\n        callback('patient', element, value)\n    }\n\n    const handleJson = (e) => {\n        if (e.jsObject) {\n            callback('patient', 'resource', e.jsObject);\n        }\n    }\n\n    const getApproxBirthdate = (age) => {\n        var d = new Date();\n        var n = d.getFullYear();\n        if (age) {\n            const birthYear = n - age;\n            let newDate = new Date(birthYear, d.getMonth(), d.getDate());\n            let ye = new Intl.DateTimeFormat('en', { year: 'numeric' }).format(newDate);\n            let mo = new Intl.DateTimeFormat('en', { month: '2-digit' }).format(newDate);\n            let da = new Intl.DateTimeFormat('en', { day: '2-digit' }).format(newDate);\n            const dateString = `${ye}-${mo}-${da}`;            \n            return dateString;\n        }\n    }\n\n    const getAge = () => {\n        const dateString = patient.birthDate;\n        var today = new Date();\n        var birthDate = new Date(dateString);\n        var age = today.getFullYear() - birthDate.getFullYear();\n        var m = today.getMonth() - birthDate.getMonth();\n        if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\n            age--;\n        }\n        return age;\n    }\n\n    const getState = () => {\n        if(patient.address) {\n            return patient.address[0].state\n        } else {\n            return ''\n        }\n    }\n\n    const handleState = (event) => {\n        const address = [{\n            \"use\": \"home\",\n            \"type\": \"both\",\n            \"state\": event.target.value\n        }];\n        handleChange('address', address);\n    }\n\n    const handleAge = (event) => {\n        const age = getApproxBirthdate(event.target.value);\n        handleChange('birthDate', age);\n    }\n\n    const renderGender = () => {\n        return (\n            <div className={classes.genderBox}>\n                <FormControl component=\"fieldset\">\n                    <FormLabel component=\"legend\">Gender</FormLabel>\n                    <RadioGroup aria-label=\"gender\" name=\"gender1\" value={patient.gender || ''} onChange={(event) => {handleChange('gender', event.target.value)}}>\n                        <FormControlLabel value=\"female\" control={<Radio />} label=\"Female\" />\n                        <FormControlLabel value=\"male\" control={<Radio />} label=\"Male\" />\n                        <FormControlLabel value=\"other\" control={<Radio />} label=\"Other\" />\n                    </RadioGroup>\n                </FormControl>\n            </div>\n        )\n    }\n\n    const renderAge = () => {\n        return (\n          <div className={classes.ageBox}>\n            <TextField\n                id=\"outlined-number\"\n                label=\"Age\"\n                type=\"number\"\n                style={{\n                    width: '60px',\n                }}\n                InputLabelProps={{\n                    shrink: true,\n                }}\n                value={getAge() || ''}\n                onChange={handleAge}\n            />\n          </div>\n        )\n    }\n    return (\n        <div>\n            {renderGender()}\n            {renderAge()}\n            <StateSelect callback={handleState} state={getState()} label=\"State\" element=\"address\" options={stateOptions}></StateSelect>\n            <JsonBox \n                callback={handleJson}\n                placeholder={patient}\n            />\n        </div>\n    );\n}\n\nPatientInfo.propTypes = {\n    callback: PropTypes.func\n};\n","import React, { useEffect, useState } from 'react';\nimport useStyles from '../styles';\nimport PropTypes from 'prop-types';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport TextField from '@material-ui/core/TextField';\nimport Select from '@material-ui/core/Select';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Dialog from '@material-ui/core/Dialog';\nimport { coverageCodes, organizations } from '../constants';\nimport StateSelect from './Sections/StateSelect';\nimport { stateOptions } from '../constants';\nimport JsonBox from './Sections/JsonBox';\n\nexport default function CoverageInfo(props) {\n    const classes = useStyles();\n    const [backdrop, setBackdrop] = useState(false);\n    const { callback, coverage, organization } = props;\n    const { classValue, type, orgName } = coverage;\n    const handleChange = (element, value) => {\n        callback('coverage', element, value)\n    }\n\n    const handleChangeOrg = (element, value) => {\n        callback('coverageOrg', element, value);\n    }\n\n    const handleJson = (e) => {\n        if (e.jsObject) {\n            callback('coverage', 'resource', e.jsObject.coverage);\n            callback('coverageOrg', 'resource', e.jsObject.organization);\n        }\n    }\n\n    const loadOrg = () => {\n    }\n\n    const getClassValue = () => {\n        if(coverage.class && coverage.class.length > 0) {\n            return coverage.class[0].value\n        }\n    }\n\n    const getCode = () => {\n        if(coverage.class && coverage.class.length > 0 && coverage.class[0].type) {\n            return coverage.class[0].type.code;\n        }    \n    }\n\n    const getOrg = () => {\n        if(organization.name) {\n            return organization.name;\n        }\n    }\n\n    const handleClassValue = (event) => {\n        if( coverage.class && coverage.class.length > 0) {\n            const classList = {...coverage.class[0]}; // copy coverage.class\n            classList.value = event.target.value;\n            handleChange('class', [classList]);\n        } else {\n            const covClass = [{\n                    \"type\": {\n                        \"system\": \"http://hl7.org/fhir/coverage-class\",\n                    },\n                    \"value\": event.target.value\n                }]\n            handleChange('class', covClass);\n        }\n    }\n\n    const handleOrg = (event) => {\n        handleChangeOrg('name', event.target.value);\n    }\n\n    const handleCode = (event) => {\n        if( coverage.class && coverage.class.length > 0) {\n            const classList = {...coverage.class[0]}; // copy coverage.class\n            classList.type = {\n                \"system\": \"http://hl7.org/fhir/coverage-class\",\n                \"code\": event.target.value\n            };\n            handleChange('class', [classList]);\n        } else {\n            const covClass = [{\n                \"type\": {\n                    \"system\": \"http://hl7.org/fhir/coverage-class\",\n                    \"code\": event.target.value\n                },\n            }];\n            handleChange('class', covClass);\n        }\n    }\n\n    console.log(getOrg());\n    return (\n        <div>\n            <div style={{display: 'inline-block'}}>\n            <TextField\n                id=\"outlined-number\"\n                label=\"Class Value\"\n                type=\"text\"\n                style={{\n                    width: 'auto',\n                }}\n                InputLabelProps={{\n                    shrink: true,\n                }}\n                value={getClassValue() || ''}\n                onChange={handleClassValue}\n            />\n            <StateSelect \n                callback={handleCode} \n                state={getCode()} \n                label=\"Code\" \n                element=\"type\" \n                options={coverageCodes}\n            />\n            <hr />\n            <div className={classes.orgBox}>\n                Organization\n                <div>\n                    <StateSelect \n                        callback={handleOrg} \n                        state={getOrg()} \n                        label=\"Name\" \n                        element=\"name\" \n                        options={organizations}\n                    />\n                </div>\n            </div>\n\n            </div>\n            <JsonBox \n                callback={handleJson}\n                placeholder={{coverage, organization}}\n            />\n        </div>\n    );\n}\n\nCoverageInfo.propTypes = {\n    callback: PropTypes.func\n};\n","import React, { Component } from 'react';\nimport styles from './card-list.css';\nimport Button from 'terra-button';\nimport TerraCard from 'terra-card';\nimport Text from 'terra-text';\nimport PropTypes from 'prop-types';\nimport axios from 'axios';\nimport ReactMarkdown from 'react-markdown';\nimport './displayBox.css';\n\nconst propTypes = {\n    /**\n     * A boolean to determine if the context of this component is under the Demo Card feature of the Sandbox, or in the actual\n     * hook views that render cards themselves. This flag is necessary to make links and suggestions unactionable in the Card Demo view.\n     */\n    isDemoCard: PropTypes.bool,\n    /**\n     * The FHIR access token retrieved from the authorization server. Used to retrieve a launch context for a SMART app\n     */\n    fhirAccessToken: PropTypes.object,\n    /**\n     * Function callback to take a specific suggestion from a card\n     */\n    takeSuggestion: PropTypes.func.isRequired,\n    /**\n     * Identifier of the Patient resource for the patient in context\n     */\n    patientId: PropTypes.string,\n    /**\n     * The FHIR server URL in context\n     */\n    fhirServerUrl: PropTypes.string,\n    /**\n     * The FHIR version in use\n     */\n    fhirVersion: PropTypes.string,\n    /**\n     * JSON response from a CDS service containing potential cards to display\n     */\n    cardResponses: PropTypes.object,\n};\n\nexport default class DisplayBox extends Component {\n    constructor(props) {\n        super(props);\n        this.launchLink = this.launchLink.bind(this);\n        this.launchSource = this.launchSource.bind(this);\n        this.renderSource = this.renderSource.bind(this);\n        this.modifySmartLaunchUrls = this.modifySmartLaunchUrls.bind(this);\n        this.retrieveLaunchContext = this.retrieveLaunchContext.bind(this);\n        this.exitSmart = this.exitSmart.bind(this);\n        this.state = {\n            value: \"\",\n            smartLink: \"\",\n            response: {}\n        };\n    }\n\n    static getDerivedStateFromProps(nextProps, prevState) {\n        if (JSON.stringify(nextProps.response) !== JSON.stringify(prevState.response)) {\n            return { \"response\": nextProps.response }\n        } else {\n            return null;\n        }\n    }\n\n    shouldComponentUpdate(nextProps, prevState) {\n        if (JSON.stringify(nextProps.response) !== JSON.stringify(this.state.response) || this.state.smartLink !== prevState.smartLink) {\n            return true;\n        } else {\n            return false;\n        }\n    }\n    /**\n     * Take a suggestion from a CDS service based on action on from a card. Also pings the analytics endpoint (if any) of the\n     * CDS service to notify that a suggestion was taken\n     * @param {*} suggestion - CDS service-defined suggestion to take based on CDS Hooks specification\n     * @param {*} url - CDS service endpoint URL\n     */\n    takeSuggestion(suggestion, url) {\n        if (!this.props.isDemoCard) {\n            if (suggestion.label) {\n                if (suggestion.uuid) {\n                    axios({\n                        method: 'POST',\n                        url: `${url}/analytics/${suggestion.uuid}`,\n                        data: {},\n                    });\n                }\n                this.props.takeSuggestion(suggestion);\n            } else {\n                console.error('There was no label on this suggestion', suggestion);\n            }\n        }\n    }\n\n    /**\n     * Prevent the source link from opening in the same tab\n     * @param {*} e - Event emitted when source link is clicked\n     */\n    launchSource(e) {\n        e.preventDefault();\n    }\n\n    exitSmart(e) {\n        this.setState({ \"smartLink\": \"\" });\n    }\n    /**\n     * Open the absolute or SMART link in a new tab and display an error if a SMART link does not have\n     * appropriate launch context if used against a secured FHIR endpoint.\n     * @param {*} e - Event emitted when link is clicked\n     * @param {*} link - Link object that contains the URL and any error state to catch\n     */\n    launchLink(e, link) {\n        if (!this.props.isDemoCard) {\n            e.preventDefault();\n            if (link.error) {\n                // TODO: Create an error modal to display for SMART link that cannot be launched securely\n                return;\n            }\n            window.open(link.url, '_blank');\n\n        }\n    }\n\n    /**\n     * For SMART links, modify the link URLs as this component processes them according to two scenarios:\n     * 1 - Secured: Retrieve a launch context for the link and append a launch and iss parameter for use against secured endpoints\n     * 2 - Open: Append a fhirServiceUrl and patientId parameter to the link for use against open endpoints\n     * @param {*} card - Card object to process the links for\n     */\n    modifySmartLaunchUrls(card) {\n        if (!this.props.isDemoCard) {\n            return card.links.map((link) => {\n                let linkCopy = Object.assign({}, link);\n\n                if (link.type === 'smart' && (this.props.fhirAccessToken || this.props.ehrLaunch) && !this.state.smartLink) {\n                    this.retrieveLaunchContext(\n                        linkCopy, this.props.fhirAccessToken,\n                        this.props.patientId, this.props.fhirServerUrl, this.props.fhirVersion\n                    ).then((result) => {\n                        linkCopy = result;\n                        return linkCopy;\n                    });\n                } else if (link.type === 'smart') {\n                    if (link.url.indexOf('?') < 0) {\n                        linkCopy.url += '?';\n                    } else {\n                        linkCopy.url += '&';\n                    }\n                    //linkCopy.url += `fhirServiceUrl=${this.props.fhirServerUrl}`;\n                    //linkCopy.url += `&patientId=${this.props.patientId}`;\n                }\n                return linkCopy;\n            });\n        }\n        return undefined;\n    }\n\n    /**\n   * Retrieves a SMART launch context from an endpoint to append as a \"launch\" query parameter to a SMART app launch URL (see SMART docs for more about launch context).\n   * This applies mainly if a SMART app link on a card is to be launched. The link needs a \"launch\" query param with some opaque value from the SMART server entity.\n   * This function generates the launch context (for HSPC Sandboxes only) for a SMART application by pinging a specific endpoint on the FHIR base URL and returns\n   * a Promise to resolve the newly modified link.\n   * @param {*} link - The SMART app launch URL\n   * @param {*} accessToken - The access token provided to the CDS Hooks Sandbox by the FHIR server\n   * @param {*} patientId - The identifier of the patient in context\n   * @param {*} fhirBaseUrl - The base URL of the FHIR server in context\n   */\n    retrieveLaunchContext(link, accessToken, patientId, fhirBaseUrl, fhirVersion) {\n        return new Promise((resolve, reject) => {\n            const headers = accessToken ?\n                {\n                    \"Accept\": 'application/json',\n                    \"Authorization\": `Bearer ${accessToken.access_token}`\n                }\n                :\n                {\n                    \"Accept\": 'application/json'\n                };\n            const launchParameters = {\n                patient: patientId,\n            };\n\n            if (link.appContext) {\n                launchParameters.appContext = link.appContext;\n            }\n\n            // May change when the launch context creation endpoint becomes a standard endpoint for all EHR providers\n            axios({\n                method: 'post',\n                url: `${fhirBaseUrl}/_services/smart/Launch`,\n                headers,\n                data: {\n                    launchUrl: link.url,\n                    parameters: launchParameters,\n                },\n            }).then((result) => {\n                if (result.data && Object.prototype.hasOwnProperty.call(result.data, 'launch_id')) {\n                    if (link.url.indexOf('?') < 0) {\n                        link.url += '?';\n                    } else {\n                        link.url += '&';\n                    }\n                    link.url += `launch=${result.data.launch_id}`;\n                    link.url += `&iss=${fhirBaseUrl}`;\n                    return resolve(link);\n                }\n                console.error('FHIR server endpoint did not return a launch_id to launch the SMART app. See network calls to the Launch endpoint for more details');\n                link.error = true;\n                return reject(link);\n            }).catch((err) => {\n                console.error('Cannot grab launch context from the FHIR server endpoint to launch the SMART app. See network calls to the Launch endpoint for more details', err);\n                link.error = true;\n                return reject(link);\n            });\n        });\n    }\n\n    /**\n     * Helper function to build out the UI for the source of the Card\n     * @param {*} source - Object as part of the card to build the UI for\n     */\n    renderSource(source) {\n        if (!source.label) { return null; }\n        let icon;\n        if (source.icon) {\n            icon = <img className={styles['card-icon']} src={source.icon} alt=\"Could not fetch icon\" width=\"100\" height=\"100\" />;\n        }\n        if (!this.props.isDemoCard) {\n            return (\n                <div className={styles['card-source']}>\n                    Source: <a className={styles['source-link']} href={source.url || '#'} onClick={e => this.launchSource(e)}>{source.label}</a>\n                    {icon}\n                </div>\n            );\n        }\n        return (\n            <div className={styles['card-source']}>\n                Source:\n                <a // eslint-disable-line jsx-a11y/anchor-is-valid\n                    className={styles['source-link']}\n                    href=\"#\"\n                    onClick={e => this.launchSource(e)}\n                >\n                    {source.label}\n                </a>\n                {icon}\n            </div>\n        );\n    }\n    render() {\n        const indicators = {\n            info: 0,\n            warning: 1,\n            'hard-stop': 2,\n            error: 3,\n        };\n\n        const summaryColors = {\n            info: '#0079be',\n            warning: '#ffae42',\n            'hard-stop': '#c00',\n            error: '#333',\n        };\n        const renderedCards = [];\n        // Iterate over each card in the cards array\n        if (this.state.response != null && this.state.response.cards != null) {\n            this.state.response.cards\n                .sort((b, a) => indicators[a.indicator] - indicators[b.indicator])\n                .forEach((c, cardInd) => {\n                    const card = JSON.parse(JSON.stringify(c));\n\n                    // -- Summary --\n                    const summarySection = <Text fontSize={18} weight={700} color={summaryColors[card.indicator]}>{card.summary}</Text>;\n\n                    // -- Source --\n                    const sourceSection = card.source && Object.keys(card.source).length ? this.renderSource(card.source) : '';\n\n                    // -- Detail (ReactMarkdown supports Github-flavored markdown) --\n                    const detailSection = card.detail ? <div style={{ color: summaryColors.info }}><ReactMarkdown source={card.detail} /></div> : <Text color='grey'>None</Text>;\n\n                    // -- Suggestions --\n                    let suggestionsSection;\n                    if (card.suggestions) {\n                        suggestionsSection = card.suggestions.map((item, ind) => (\n                            <Button\n                                key={ind}\n                                onClick={() => this.takeSuggestion(item, card.serviceUrl)}\n                                text={item.label}\n                                variant={Button.Opts.Variants.EMPHASIS}\n                            />\n                        ));\n                    }\n\n                    // -- Links --\n                    let linksSection;\n                    if (card.links) {\n                        card.links = this.modifySmartLaunchUrls(card) || card.links;\n                        linksSection = card.links.map((link, ind) => (\n                            <Button\n                                key={ind}\n                                onClick={e => this.launchLink(e, link)}\n                                text={link.label}\n                                variant={Button.Opts.Variants['DE-EMPHASIS']}\n                            />\n                        ));\n                    }\n\n                    const cardSectionHeaderStyle = { marginBottom: '2px', color: 'black' };\n\n                    const builtCard = (\n                        <TerraCard key={cardInd} className='decision-card alert-info'>\n                            <h4 style={cardSectionHeaderStyle}>Summary</h4>\n                            <div>{summarySection}</div>\n\n                            <h4 style={cardSectionHeaderStyle}>Details</h4>\n                            <div>{detailSection}</div>\n\n                            <br />\n                            <div>{sourceSection}</div>\n\n                            <div className={styles['suggestions-section']}>\n                                {suggestionsSection}\n                            </div>\n                            <div className={styles['links-section']}>\n                                {linksSection}\n                            </div>\n                        </TerraCard>);\n\n                    renderedCards.push(builtCard);\n                });\n        }\n        if (renderedCards.length === 0) { return <div><div className='decision-card alert-warning'>No Cards</div></div>; }\n        return <div>\n            <div>\n                {renderedCards}\n            </div>\n        </div>;\n    }\n}\n","import React, { useState } from 'react';\nimport useStyles from './styles';\nimport PropTypes from 'prop-types';\n\n\nexport default function Expandable(props) {\n    const classes = useStyles();\n    const { title, Fragment, callback } = props;\n    const [open, setOpen] = useState(false);\n    const resourceClass = open ? `${classes.resourceBar} ${classes.openBar}` : classes.resourceBar;\n\n    return (\n        <div className={resourceClass} >\n            <div onClick={() => { setOpen(!open) }}>{title}</div>\n            <hr style={{marginTop: '9px'}}/>\n            <div className={classes.inputs}>\n                {Fragment}\n            </div>\n        </div>\n    );\n}\n\nExpandable.propTypes = {\n    Fragment: PropTypes.object.isRequired,\n    title: PropTypes.string.isRequired,\n    callback: PropTypes.func\n};\n","import React, { useEffect, useState } from 'react';\nimport useStyles from '../styles';\nimport PropTypes from 'prop-types';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport TextField from '@material-ui/core/TextField';\nimport Select from '@material-ui/core/Select';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport StateSelect from './Sections/StateSelect';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport { coverageCodes } from '../constants';\nimport { stateOptions } from '../constants';\nimport JsonBox from './Sections/JsonBox';\n\nexport default function PractitionerInfo(props) {\n    const classes = useStyles();\n    const { callback, practitioner, role, org, location } = props;\n    const [backdrop, setBackdrop] = useState(false);\n\n    const handleChange = (element, value) => {\n        callback('practitioner', element, value)\n    }\n\n    const handleJson = (e) => {\n        if (e.jsObject) {\n            callback('practitioner', 'resource', e.jsObject.practitioner);\n            callback('practitionerOrg', 'resource', e.jsObject.organization);\n            callback('practitionerRole', 'resource', e.jsObject.practitionerRole);\n            callback('practitionerLocation', 'resource', e.jsObject.location);\n\n\n        }\n    }\n\n    const handleState = (event) => {\n        const loc = {\n            \"line\": [\n                \"100 Good St\"\n            ],\n            \"city\": \"Bedford\",\n            'state': event.target.value,\n        }\n        callback('practitionerLocation', 'address', loc);\n    }\n\n    const handleOrg = (event) => {\n        callback('practitionerOrg','name', event.target.value);\n    }\n\n    const getOrg = () => {\n        return org.name;\n    }\n\n    const getState = () => {\n        if(location.address) {\n            return location.address.state\n        }\n    }\n\n    return (\n        <div>\n            <div style={{display: 'inline-block'}}>\n\n            <StateSelect callback={handleState} state = {getState()} element=\"state\" label=\"State\" options={stateOptions}></StateSelect>\n            <hr />\n            <div className={classes.orgBox}>\n                Organization\n                <div>\n                    <TextField\n                        id=\"outlined-number\"\n                        label=\"Name\"\n                        type=\"text\"\n                        style={{\n                            width: 'auto',\n                        }}\n                        InputLabelProps={{\n                            shrink: true,\n                        }}\n                        value={getOrg() || ''}\n                        onChange={handleOrg}\n                    />\n                </div>\n\n            </div>\n            </div>\n            <JsonBox \n                callback={handleJson}\n                placeholder={{practitioner, 'practitionerRole':role, 'organization':org, 'location':location}}\n            />\n        </div>\n    );\n}\n\nPractitionerInfo.propTypes = {\n    callback: PropTypes.func\n};\n","import React, { useEffect, useState } from 'react';\nimport useStyles from '../styles';\nimport PropTypes from 'prop-types';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport TextField from '@material-ui/core/TextField';\nimport Select from '@material-ui/core/Select';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport { codeSystems, cptCodes, hcpcsCodes, rxNormCodes } from '../constants';\nimport StateSelect from './Sections/StateSelect';\nimport JsonBox from './Sections/JsonBox';\n\n\nexport default function DeviceRequestInfo(props) {\n    const classes = useStyles();\n    const { callback, deviceRequest } = props;\n    const handleChange = (element, value) => {\n        callback('deviceRequest', element, value)\n    }\n\n    const handleJson = (e) => {\n        if (e.jsObject) {\n            callback('deviceRequest', 'resource', e.jsObject);\n        }\n    }\n\n\n    const loadOrg = () => {\n    }\n\n    const getCode = () => {\n        if (deviceRequest.codeCodeableConcept && deviceRequest.codeCodeableConcept.coding && deviceRequest.codeCodeableConcept.coding.length > 0) {\n            return deviceRequest.codeCodeableConcept.coding[0].code;\n        }\n    }\n\n    const getSystem = () => {\n        if (deviceRequest.codeCodeableConcept && deviceRequest.codeCodeableConcept.coding && deviceRequest.codeCodeableConcept.coding.length > 0) {\n            return deviceRequest.codeCodeableConcept.coding[0].system;\n        }\n    }\n    const handleCode = (event) => {\n        if (deviceRequest.codeCodeableConcept && deviceRequest.codeCodeableConcept.coding && deviceRequest.codeCodeableConcept.coding[0].system) {\n            const codeableConcept = {\n                \"coding\": [\n                    {\n                        \"system\": deviceRequest.codeCodeableConcept.coding[0].system,\n                        \"code\": event.target.value,\n                    }\n                ]\n            }\n            handleChange('codeCodeableConcept', codeableConcept);\n        } else if (deviceRequest.codeCodeableConcept && deviceRequest.codeCodeableConcept.coding){\n            const codeableConcept = {\n                \"coding\": [\n                    {\n                        \"code\": event.target.value,\n                    }\n                ]\n            }\n            handleChange('codeCodeableConcept', codeableConcept);\n        }\n    }\n\n    const handleSystem = (event) => {\n        const codeableConcept = {\n            \"coding\": [\n                {\n                    \"system\": event.target.value,\n                }\n            ]\n        }\n        handleChange('codeCodeableConcept', codeableConcept);\n    }\n\n    const renderCode = () => {\n        let options = [];\n        if( deviceRequest.codeCodeableConcept && deviceRequest.codeCodeableConcept.coding) {\n            const system =  deviceRequest.codeCodeableConcept.coding[0].system;\n            if (system === 'https://bluebutton.cms.gov/resources/codesystem/hcpcs') {\n                options = hcpcsCodes;\n            }else if (system === 'http://www.ama-assn.org/go/cpt') {\n                options = cptCodes;\n            } else if (system === 'http://www.nlm.nih.gov/research/umls/rxnorm') {\n                options = rxNormCodes;\n            }\n        }\n        return (\n            <StateSelect \n            callback={handleCode} \n            state={getCode()} \n            label=\"Code\" \n            element=\"code\" \n            options={options}\n            />\n        )\n    }\n\n    return (\n        <div>\n            <div style={{display: 'inline-block'}}>\n                <StateSelect \n                    callback={handleSystem} \n                    state={getSystem()} \n                    label=\"CodeSystem\" \n                    element=\"system\" \n                    options={codeSystems}\n                />\n                {renderCode()}\n            </div>\n            <JsonBox \n                callback={handleJson}\n                placeholder={deviceRequest}\n            />\n        </div>\n    );\n}\n\nDeviceRequestInfo.propTypes = {\n    callback: PropTypes.func\n};\n","import { getBaseUrl } from '../../Utils';\nimport React, { Component } from 'react';\nimport {getUrlParameter, makeUrlParams} from './url';\nimport {grant_type} from './constants';\nimport { Dropdown } from 'semantic-ui-react';\nimport PatientInfo from './Resources/PatientInfo';\nimport CoverageInfo from './Resources/CoverageInfo';\nimport DisplayBox from './DisplayBox/DisplayBox';\nimport Expandable from './Expandable';\nimport FHIR from \"fhirclient\"\nimport buildRequest from './buildRequest';\n\nimport './launch.css';\nimport PractitionerInfo from './Resources/PractitionerInfo';\nimport DeviceRequestInfo from './Resources/DeviceRequestInfo';\nexport default class Index extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            token: '',\n            params: {},\n            patients: [],\n            // should make these resources a mutable list\n            patient: {\n                \"resourceType\": \"Patient\",\n                \"id\": \"example1\",\n            },\n            coverage: {\n                \"resourceType\": \"Coverage\",\n                \"id\": \"example2\",\n                \"beneficiary\": {\n                    \"reference\": \"Patient/example1\"\n                },\n                \"status\": \"active\",\n                \"class\": [],\n                \"payor\": [\n                    {\"reference\": \"Organization/covOrg1\"}\n                ]\n            },\n            coverageOrg: {\n                \"resourceType\": \"Organization\",\n                \"id\": \"covOrg1\",\n            },\n            practitioner: {\n                \"resourceType\": \"Practitioner\",\n                \"id\": \"example3\",\n            },\n            practitionerRole: {\n                \"resourceType\": \"PractitionerRole\",\n                \"id\": \"role1\",\n                \"practitioner\": {\n                  \"reference\": \"Practitioner/example3\"\n                },\n                \"location\": [\n                  {\n                    \"reference\": \"Location/loc1\"\n                  }\n                ],\n                \"organization \": {\n                  \"reference\": \"Organization/pracOrg1\"\n                }\n            },\n            practitionerLocation: {\n                \"resourceType\": \"Location\",\n                \"id\": \"loc1\",\n                \"address\": {\n                  \"line\": [\n                    \"100 Good St\"\n                  ],\n                  \"city\": \"Bedford\",\n                  \"postalCode\": \"01730\"\n                }\n            },\n            practitionerOrg: {\n                \"resourceType\": \"Organization\",\n                \"id\": \"pracOrg1\",\n            },\n            deviceRequest: {\n                    \"resourceType\": \"DeviceRequest\",\n                    \"id\": \"example4\",\n                    \"meta\": {\n                      \"profile\": [\n                        \"http://hl7.org/fhir/us/davinci-crd/R4/StructureDefinition/profile-devicerequest-r4\"\n                      ]\n                    },\n                    \"insurance\": [\n                      {\n                        \"reference\": \"Coverage/example2\"\n                      }\n                    ],\n                    \"status\": \"draft\",\n\n                    \"subject\": {\n                      \"reference\": \"Patient/example1\"\n                    },\n                    \"performer\": {\n                      \"reference\": \"Practitioner/example3\"\n                    },\n                    \"intent\": \"original-order\",\n                  \n            },\n        };\n\n        this.handleFieldChange = this.handleFieldChange.bind(this);\n        this.makePatientResource = this.makePatientResource.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    handleFieldChange(resource, fieldId, value){\n        if(fieldId === 'resource') {\n            this.setState({\n                [resource]: value\n            })\n        } else {\n            this.setState(prevState => ({\n                [resource]: {                   // object that we want to update\n                    ...prevState[resource],    // keep all other key-value pairs\n                    [fieldId]: value         // update the value of specific key\n                }\n            }))\n        }\n      };\n\n    componentDidMount() {\n        const state = getUrlParameter(\"state\");\n        const code = getUrlParameter(\"code\");\n        const { tokenUri, client_id, serviceUri, redirect_uri } = JSON.parse(sessionStorage[state]);\n        this.setState({serviceUri});\n        const data = {code, grant_type, redirect_uri, client_id};\n        const body = makeUrlParams(data);\n        this.makeTokenRequest(tokenUri, body, serviceUri);\n    }\n\n    handleSubmit() {\n        let deviceRequestResources = [\n            this.state.patient,\n            this.state.deviceRequest,\n            this.state.coverage,\n            this.state.practitioner,\n            this.state.practitionerRole,\n            this.state.practitionerLocation,\n            this.state.practitionerOrg,\n            this.state.coverageOrg,\n          ];\n          deviceRequestResources = deviceRequestResources.map((e) => {\n              return {resource: e}\n          })\n          const request = buildRequest(this.state.deviceRequest, this.state.patient, this.state.serviceUri, this.state.token, deviceRequestResources, true, 'order-sign')\n          fetch('http://localhost:8090/r4/cds-services/order-sign-crd', {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n            },\n            body: JSON.stringify(request)\n        }).then(response => {\n            response.json().then((fhirResponse) => {\n                console.log(fhirResponse);\n                if (fhirResponse && fhirResponse.status) {\n                    console.log(fhirResponse);\n                } else {\n                    console.log(fhirResponse);\n                    this.setState({ response: fhirResponse });\n                }\n            })\n        }).catch((err) => console.log(err));\n    }\n\n    makeTokenRequest(tokenUri, body, serviceUri) {\n        fetch(tokenUri, {\n            headers: {\"Content-Type\": \"application/x-www-form-urlencoded\"},\n            method: \"POST\",\n            body: body\n        })\n        .then(response => response.json())\n        .then((data) => {\n            const token = data.access_token;\n            this.setState({token});\n            const patients = fetch(`${serviceUri}/Patient`, {\n                headers: {\n                    \"Authorization\": `Bearer ${token}`\n                }\n            }).then(response => response.json()).then((data) => {\n                this.setState({patients: data.entry})\n            })\n        })\n    }\n\n\n\n    makePatientResource() {\n          const patientResource = {...this.state.patient};\n\n            patientResource.gender = this.state.patient.gender;\n            patientResource.birthDate = this.getApproxBirthdate(this.state.patient.age)\n            patientResource.address = [\n                {\n                    \"use\": \"home\",\n                    \"type\": \"both\",\n                    \"state\": this.state.patient.state\n                }\n          ]\n          return patientResource;\n          \n    }\n\n    renderPatients(patients) {\n        console.log(\"hello\");\n        const options = patients.map((entry) => {\n            return {\n                key: entry.fullUrl,\n                value: entry.resource.id,\n                text: entry.resource.id\n            }\n        })\n        return  (<Dropdown \n        placeholder='Select client'\n        fluid\n        search\n        selection\n        options={options}\n    />)\n    }\n\n    render() {\n        return (\n            <div>\n                <div className=\"left\">\n                    <Expandable title=\"Patient\" Fragment={<PatientInfo callback={this.handleFieldChange} patient={this.state.patient}/>} />\n                    <Expandable title=\"Coverage\" Fragment={<CoverageInfo callback={this.handleFieldChange} coverage={this.state.coverage} organization={this.state.coverageOrg}/>} />\n                    <Expandable title=\"Practitioner\" Fragment={<PractitionerInfo callback={this.handleFieldChange} practitioner={this.state.practitioner} role={this.state.practitionerRole} org={this.state.practitionerOrg} location={this.state.practitionerLocation}/>} />\n                    <Expandable title=\"Device Request\" Fragment={<DeviceRequestInfo callback={this.handleFieldChange} deviceRequest={this.state.deviceRequest}/>} />\n\n                    <button className='submitButton' onClick={this.handleSubmit}>Submit</button>\n                </div>\n                <div className=\"right\">\n                    <DisplayBox \n                      isDemoCard={true}\n                      response={this.state.response}\n\n                    />\n                </div>\n            </div>\n        )\n    }\n}\n","\nexport default function buildRequest(request, patient, ehrUrl, token, prefetch, includePrefetch, hook) {    \n    const r4json = {\n        \"hookInstance\": \"d1577c69-dfbe-44ad-ba6d-3e05e953b2ea\",\n        \"fhirServer\": ehrUrl,\n        \"hook\": hook,\n        \"fhirAuthorization\": {\n            \"access_token\": token.access_token,\n            \"token_type\": \"Bearer\",\n            \"expires_in\": 300,\n            \"scope\": \"patient/Patient.read patient/Observation.read\",\n            \"subject\": \"cds-service4\"\n        },\n        \"context\": {\n            \"userId\": \"Practitioner/example\",\n            \"patientId\": patient.id,\n            \"encounterId\": \"enc89284\"\n        }\n    };\n\n    if (hook === \"order-select\") {\n        r4json.context.draftOrders = {\n            \"resourceType\": \"Bundle\",\n            \"entry\": [\n                request\n            ]\n        }\n        r4json.context.selections = [\n            request.resourceType + \"/\" + request.id\n        ]\n    } else if (hook === \"order-sign\") {\n        r4json.context.draftOrders = {\n            \"resourceType\": \"Bundle\",\n            \"entry\": [\n                request\n            ]\n        }\n    }\n\n    if(includePrefetch){\n        console.log(prefetch);\n        if(request.resourceType === 'DeviceRequest') {\n            r4json.prefetch = {\n                \"deviceRequestBundle\": {\n                    \"resourceType\": \"Bundle\",\n                    \"type\": \"collection\",\n                    \"entry\": prefetch\n                }\n            }\n        } else if(request.resourceType === 'ServiceRequest') {\n            r4json.prefetch = {\n                \"serviceRequestBundle\": {\n                    \"resourceType\": \"Bundle\",\n                    \"type\": \"collection\",\n                    \"entry\": prefetch\n                }\n            }\n        } else if(request.resourceType === 'MedicationRequest') {\n            r4json.prefetch = {\n                \"medicationRequestBundle\": {\n                    \"resourceType\": \"Bundle\",\n                    \"type\": \"collection\",\n                    \"entry\": prefetch\n                }\n            }\n        } else if(request.resourceType === 'MedicationDispense') {\n            r4json.prefetch = {\n                \"medicationDispenseBundle\": {\n                    \"resourceType\": \"Bundle\",\n                    \"type\": \"collection\",\n                    \"entry\": prefetch\n                }\n            }\n        }\n    }\n\n    console.log(r4json);\n    console.log(\"--------- r4\");\n    return r4json;\n}\n","import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\n\nimport RequestLog from './containers/RequestLog';\nimport KeyInterface from './containers/KeyInterface';\nimport DataTable from './components/DataTable';\nimport FhirTable from './components/FhirTable';\nimport HomePage from './components/HomePage';\nimport Launcher from './components/Smart/Launcher';\nimport Index from './components/Smart/Index';\nimport {withRouter} from 'react-router-dom';\nimport {getBaseUrl} from './Utils';\n\nconst publicKey = () => (\n  <div>\n    <KeyInterface doFetch={true}/>\n  </div>\n)\n\nconst Category = () => (\n  <div>\n    <h2 className=\"App-header\">Category</h2>\n  </div>\n)\n\nlet baseUrl = getBaseUrl();\n\nclass App extends Component {\n  render() {\n      const homeUrl = baseUrl;\n      const publicUrl = baseUrl + 'public';\n      const requestUrl = baseUrl + 'requests';\n      const dataUrl = baseUrl + 'data';\n      const fhirUrl = baseUrl + 'fhirview';\n      const launchUrl = baseUrl + 'launch';\n      const indexUrl = baseUrl + 'index';\n\n    return (\n      <div>\n      <nav className=\"navbar navbar-fixed-top headerEntry\">\n      <div className=\"container padHelp\">\n          <span className = \"navbar-brand headerIcon\"> <span className=\"glyphicon glyphicon-fire\"></span></span>\n          <a className={\"navbar-brand headerLink \" +\n            (this.props.location.pathname==homeUrl?\"active\":\"\")} href={homeUrl}>Home</a>\n\n          <a className={\"navbar-brand headerLink \" +\n            (this.props.location.pathname==publicUrl?\"active\":\"\")} href={publicUrl}>Keys</a>\n          <a className={\"navbar-brand headerLink \" +\n            (this.props.location.pathname==dataUrl?\"active\":\"\")} href={dataUrl}>Rules</a>\n          <a className={\"navbar-brand headerLink \" +\n            (this.props.location.pathname==fhirUrl?\"active\":\"\")} href={fhirUrl}>FHIR</a>\n          <a className={\"navbar-brand headerLink \" +\n            (this.props.location.pathname==requestUrl?\"active\":\"\")} href={requestUrl}>Log</a>\n      </div>\n      </nav>\n        <Route exact={true} path={homeUrl} component={HomePage}/>\n        <Route path={publicUrl} component={publicKey}/>\n        <Route path={requestUrl} component={RequestLog}/>\n        <Route path={dataUrl} component={DataTable}/>\n        <Route path={fhirUrl} component={FhirTable}/>\n        <Route path={launchUrl} component={Launcher}/>\n        <Route path={indexUrl} component={Index} />\n\n      </div>\n    );\n  }\n}\n\nexport default withRouter(App);\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'semantic-ui-css/semantic.min.css'\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(<BrowserRouter>\n                <App />\n                </BrowserRouter>, document.getElementById('root'));\nregisterServiceWorker();\n","\n// Convenience function for parsing of URL parameters\n// based on http://www.jquerybyexample.net/2012/06/get-url-parameters-using-jquery.html\nfunction getUrlParameter(sParam) {\n  var sPageURL = window.location.search.substring(1);\n  var sURLVariables = sPageURL.split(\"&\");\n  for (var i = 0; i < sURLVariables.length; i++) {\n    var sParameterName = sURLVariables[i].split(\"=\");\n    if (sParameterName[0] === sParam) {\n      var res = sParameterName[1].replace(/\\+/g, \"%20\");\n      return decodeURIComponent(res);\n    }\n  }\n}\n\nfunction makeUrlParams(params) {\n    const value = [];\n    Object.keys(params).forEach((key) => {\n        value.push(`${key}=${params[key]}`)\n    });\n    return value.join('&');\n}\n\nmodule.exports = {getUrlParameter, makeUrlParams};","const codeSystemConversion = {\n    \"http://www.ama-assn.org/go/cpt\":\"CPT\",\n    \"https://bluebutton.cms.gov/resources/codesystem/hcpcs\":\"HCPCS\",\n    \"http://www.nlm.nih.gov/research/umls/rxnorm\":\"RxNorm\"\n}\n\nmodule.exports.codeSystemConversion = codeSystemConversion;"],"sourceRoot":""}