buildscript {
    ext {
        springBootVersion = '2.1.1.RELEASE'
    }
    repositories {
        mavenCentral()
        maven { url 'https://repo.spring.io/snapshot' }
        maven { url 'http://repo.jenkins-ci.org/releases/' }

    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

apply plugin: 'maven'
//apply plugin: 'war'
apply plugin: 'java'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'



dependencies {

    compile project(':resources')
    compile project(':operations')

    compile('org.springframework.boot:spring-boot-starter-actuator')
    compile('org.springframework.boot:spring-boot-starter-data-jpa')
    compile('org.springframework.boot:spring-boot-starter-data-rest')
    compile('org.springframework.boot:spring-boot-starter-thymeleaf')
    compile('org.springframework.boot:spring-boot-starter-security')

    compile('com.h2database:h2')

    compile("io.jsonwebtoken:jjwt:0.7.0")

//    compile 'javax.servlet:javax.servlet-api:3.1.0'

    compile 'commons-beanutils:commons-beanutils:1.9.3'

    testCompile('org.springframework.boot:spring-boot-starter-test')
    testCompile "com.github.tomakehurst:wiremock-standalone:2.18.0"
    testCompile('org.springframework.boot:spring-boot-starter-test')

    compile 'ca.uhn.hapi.fhir:hapi-fhir-base:4.0.3'
    compile 'ca.uhn.hapi.fhir:hapi-fhir-structures-r4:4.0.3'

    //cql stuff
    compile (group: 'org.opencds.cqf', name: 'cql-engine', version: '1.3.10-SNAPSHOT') {
        exclude group: 'org.slf4j', module: 'slf4j-log4j12'
    }
    compile (group: 'org.opencds.cqf', name: 'cql-engine-fhir', version: '1.3.10-SNAPSHOT') {
        exclude group: 'org.slf4j', module: 'slf4j-log4j12'
    }

    //Use locally compiled cql libs (engine and fhir)
    compile fileTree(dir: 'libs', include: ['*.jar'])
    compile group: 'info.cqframework', name: 'cql-to-elm', version: '1.4.6'

    compile 'org.zeroturnaround:zt-zip:1.13'

    compile group: 'org.kohsuke', name:'github-api', version:'1.77'
}

task integrationTest(type: Test) {

    doFirst{
        project(':ehr-server').tasks.appBeforeIntegrationTest.execute()
        filter{
            includeTestsMatching "*PrefetchIntegrationTest*"
        }
    }
    doLast{
        project(':ehr-server').tasks.appAfterIntegrationTest.execute()

    }


}

task buildReact(type:Exec) {
    workingDir 'src/main/resources/node_interfaces'
    commandLine './buildout.sh'
}

task embedDtr() {
    doLast {
        embedDtrScript()
    }
}

void embedDtrScript() {
    exec {
        workingDir './'
        commandLine 'git','clone','https://github.com/HL7-DaVinci/dtr.git','tempFolder'
    }
    exec {
        workingDir 'tempFolder'
        commandLine 'yarn', 'install'
    }
    exec {
        workingDir 'tempFolder'
        commandLine 'yarn', 'build'
    }
    exec {
        workingDir './'
        commandLine 'rm', '-rf', 'src/main/resources/static/smart'
    }
    exec {
        workingDir './'
        commandLine 'cp', '-a', 'tempFolder/public', 'src/main/resources/static/smart'
    }
    exec {
        workingDir './'
        commandLine 'rm', '-rf', 'tempFolder'
    }
}
