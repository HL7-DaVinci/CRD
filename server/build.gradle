buildscript {
    ext {
        springBootVersion = '2.0.3.RELEASE'
    }

    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

plugins {
    id 'net.ltgt.apt' version '0.10'

}

apply plugin: 'war'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'


dependencies {

    compile project(':resources')
    compile project(':operations')

    compile('org.springframework.boot:spring-boot-starter-actuator')
    compile('org.springframework.boot:spring-boot-starter-data-jpa')
    compile('org.springframework.boot:spring-boot-starter-data-rest')
    compile('org.springframework.boot:spring-boot-starter-thymeleaf')

    // you might have to get the cert in order for this to work

//    compile('org.mitre:openid-connect-parent:1.3.1')
//    compile('org.mitre:openid-connect-common:1.3.1')
//    compile('org.mitre:openid-connect-server:1.3.1')
//    compile('org.mitre:openid-connect-client:1.3.1')

    compileOnly('org.projectlombok:lombok')
    testCompile('org.springframework.boot:spring-boot-starter-test')
    compile("org.springframework.boot:spring-boot-devtools")

    compile('ca.uhn.hapi.fhir:hapi-fhir-jpaserver-base:3.4.0'){
            exclude group: 'org.thymeleaf'
    }

    compile 'javax.servlet:javax.servlet-api:3.1.0'
    compile 'org.postgresql:postgresql:42.2.2'
}


task setupDB {
    String setupScriptFullpath = System.getProperty("user.dir") + "/src/main/resources/db/setup_db.sql"
    String sampleDataFullpath = System.getProperty("user.dir") + "/src/main/resources/db/sample_data.csv"
    String loadSampleDataSqlCommand = "COPY coverage_requirement_rules FROM '"+sampleDataFullpath+"' DELIMITER ',' NULL as 'null' QUOTE '\"' CSV HEADER;"

    exec {
        commandLine 'psql', 'postgres', '-c', "CREATE DATABASE dme;"
        ignoreExitValue true  // ignore errors since database might already exist
    }
    exec { commandLine 'psql', '-d', 'dme', '-a', '-f', setupScriptFullpath }
    exec { commandLine 'psql', 'dme', '-c', loadSampleDataSqlCommand }
}
